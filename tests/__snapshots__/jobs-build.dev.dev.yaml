// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`jobs-build.dev.dev 1`] = `
"apiVersion: v1
automountServiceAccountToken: false
kind: Namespace
metadata:
  annotations:
    field.cattle.io/projectId: \\"1234\\"
    git/branch: refs/heads/feature-branch-1
    janitor/ttl: 7d
  labels:
    application: test-jobs-build.dev
    cert: wildcard
  name: test-jobs-build-dev-feature-branch-1-312rwy
  namespace: test-jobs-build-dev-feature-branch-1-312rwy
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kapp.k14s.io/disable-default-label-scoping-rules: \\"\\"
    kapp.k14s.io/disable-default-ownership-label-rules: \\"\\"
  labels:
    application: test-jobs-build.dev
    component: app
  name: app
  namespace: test-jobs-build-dev-feature-branch-1-312rwy
spec:
  ports:
  - name: http
    port: 80
    targetPort: 3000
  selector:
    component: app
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kapp.k14s.io/disable-default-label-scoping-rules: \\"\\"
    kapp.k14s.io/disable-default-ownership-label-rules: \\"\\"
  labels:
    application: test-jobs-build.dev
    component: hasura
  name: hasura
  namespace: test-jobs-build-dev-feature-branch-1-312rwy
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8080
  selector:
    component: hasura
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kapp.k14s.io/disable-default-label-scoping-rules: \\"\\"
    kapp.k14s.io/disable-default-ownership-label-rules: \\"\\"
  labels:
    application: test-jobs-build.dev
    component: pgweb
  name: pgweb
  namespace: test-jobs-build-dev-feature-branch-1-312rwy
spec:
  ports:
  - name: http
    port: 8081
    targetPort: 8081
  selector:
    component: pgweb
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels: {}
  name: jobs-shared-storage
  namespace: awesome-ci
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
  storageClassName: azurefile
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kapp.k14s.io/change-group: autodevops/test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-group.app: autodevops/app.test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-rule.build-app: upsert after upserting autodevops/build-app.test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/disable-default-label-scoping-rules: \\"\\"
    kapp.k14s.io/disable-default-ownership-label-rules: \\"\\"
    kapp.k14s.io/nonce: \\"\\"
    kapp.k14s.io/update-strategy: fallback-on-replace
  labels:
    application: test-jobs-build.dev
    component: app
  name: app
  namespace: test-jobs-build-dev-feature-branch-1-312rwy
spec:
  replicas: 1
  selector:
    matchLabels:
      component: app
  template:
    metadata:
      labels:
        application: test-jobs-build.dev
        component: app
    spec:
      containers:
      - env: null
        envFrom:
        - secretRef:
            name: pg-user-feature-branch-1
        - secretRef:
            name: app-sealed-secret
        - configMapRef:
            name: app-configmap
        image: harbor.fabrique.social.gouv.fr/test-jobs-build.dev/app:sha-ffac537e6cbbf934b08745a378932722df287a53
        livenessProbe:
          failureThreshold: 15
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 5
        name: app
        ports:
        - containerPort: 3000
          name: http
        readinessProbe:
          failureThreshold: 15
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 0
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 128Mi
        startupProbe:
          failureThreshold: 12
          httpGet:
            path: /healthz
            port: http
          periodSeconds: 5
        volumeMounts: null
      initContainers: null
      volumes: null
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kapp.k14s.io/change-group: autodevops/test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-group.hasura: autodevops/hasura.test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-rule.build-hasura: upsert after upserting autodevops/build-hasura.test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-rule.db: upsert after upserting autodevops/db.test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/disable-default-label-scoping-rules: \\"\\"
    kapp.k14s.io/disable-default-ownership-label-rules: \\"\\"
    kapp.k14s.io/nonce: \\"\\"
    kapp.k14s.io/update-strategy: fallback-on-replace
  labels:
    application: test-jobs-build.dev
    component: hasura
  name: hasura
  namespace: test-jobs-build-dev-feature-branch-1-312rwy
spec:
  replicas: 1
  selector:
    matchLabels:
      component: hasura
  template:
    metadata:
      labels:
        application: test-jobs-build.dev
        component: hasura
    spec:
      containers:
      - env: []
        envFrom:
        - secretRef:
            name: pg-user-feature-branch-1
        - secretRef:
            name: hasura-sealed-secret
        - configMapRef:
            name: hasura-configmap
        image: harbor.fabrique.social.gouv.fr/test-jobs-build.dev/hasura:sha-ffac537e6cbbf934b08745a378932722df287a53
        livenessProbe:
          failureThreshold: 15
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 5
        name: hasura
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          failureThreshold: 15
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 30
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 500m
            memory: 1280Mi
          requests:
            cpu: 50m
            memory: 128Mi
        startupProbe:
          failureThreshold: 30
          httpGet:
            path: /healthz
            port: http
          periodSeconds: 5
      initContainers: null
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kapp.k14s.io/change-group: autodevops/test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-group.pgweb: autodevops/pgweb.test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-rule.db: upsert after upserting autodevops/db.test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/disable-default-label-scoping-rules: \\"\\"
    kapp.k14s.io/disable-default-ownership-label-rules: \\"\\"
    kapp.k14s.io/nonce: \\"\\"
    kapp.k14s.io/update-strategy: fallback-on-replace
  labels:
    application: test-jobs-build.dev
    component: pgweb
  name: pgweb
  namespace: test-jobs-build-dev-feature-branch-1-312rwy
spec:
  replicas: 1
  selector:
    matchLabels:
      component: pgweb
  template:
    metadata:
      labels:
        application: test-jobs-build.dev
        component: pgweb
    spec:
      containers:
      - image: sosedoff/pgweb:0.11.8
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 5
        name: pgweb
        ports:
        - containerPort: 8081
          name: http
        readinessProbe:
          failureThreshold: 15
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 0
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 64Mi
        startupProbe:
          failureThreshold: 12
          httpGet:
            path: /
            port: http
          periodSeconds: 5
      envFrom:
      - secretRef:
          name: pg-user-feature-branch-1
      initContainers:
      - env:
        - name: WAIT_FOR_RETRIES
          value: \\"24\\"
        envFrom:
        - secretRef:
            name: pg-user-feature-branch-1
        image: ghcr.io/socialgouv/docker/wait-for-postgres:6.56.1
        imagePullPolicy: Always
        name: wait-for-postgres
        resources:
          limits:
            cpu: 20m
            memory: 32Mi
          requests:
            cpu: 5m
            memory: 16Mi
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: jobci-clean-workflow
  namespace: awesome-ci
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/bash
            - -c
            - |
              echo \\"$KUBECONFIG\\" > ~/.kube/config
              export KUBECONFIG=~/.kube/config
              export JOB_NAMESPACE=\\"awesome-ci\\"
              ACTIVE_JOBS=$(kubectl get jobs -n $JOB_NAMESPACE -o json | jq \\".items | .[] | select(.status.active > 0).metadata.name\\")
              for subdir in /workflow/*; do

                [ -d \\"$subdir\\" ] || continue
                subdir_basename=\${subdir##*/}
                if ! echo $ACTIVE_JOBS | grep -e \\"job-\${subdir_basename}\\"; then
                  echo \\"Cleaning '$subdir'\\"
                  rm -rf $subdir
                fi
              done
            envFrom:
            - secretRef:
                name: kubeconfig
            image: bitnami/kubectl:latest
            imagePullPolicy: IfNotPresent
            name: job
            volumeMounts:
            - mountPath: /workflow
              name: workflow
          restartPolicy: Never
          volumes:
          - name: workflow
            persistentVolumeClaim:
              claimName: jobs-shared-storage
  schedule: 0 0 * * *
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    janitor/ttl: \\"1800\\"
    kapp.k14s.io/change-group: autodevops/test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-group.build-app: autodevops/build-app.test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-group.build-app..credentials: autodevops/build-app..credentials.test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-group.build-app.credentials: autodevops/build-app.credentials.test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/nonce: \\"\\"
    kapp.k14s.io/update-strategy: fallback-on-replace
  name: job-feature-branch-1-build-app--credentials
  namespace: awesome-ci
spec:
  activeDeadlineSeconds: 3600
  backoffLimit: 2
  template:
    metadata:
      annotations: null
      labels: null
    spec:
      containers:
      - command:
        - /bin/bash
        - -c
        - |
          mkdir -p /workflow/docker
          echo \\"{\\\\\\"auths\\\\\\":{\\\\\\"$CI_REGISTRY\\\\\\":{\\\\\\"username\\\\\\":\\\\\\"$CI_REGISTRY_USER\\\\\\",\\\\\\"password\\\\\\":\\\\\\"$CI_REGISTRY_PASSWORD\\\\\\"}}}\\" > $DOCKER_CONFIG
        env:
        - name: DOCKER_CONFIG
          value: /workflow/docker/config.json
        envFrom:
        - secretRef:
            name: harbor
        image: debian:stable
        imagePullPolicy: IfNotPresent
        name: job
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        volumeMounts:
        - mountPath: /workspace
          name: workspace
        - mountPath: /action
          name: action
        - mountPath: /workflow
          name: workflow
          subPath: feature-branch-1/ffac537e6cbbf934b08745a378932722df287a53
        workingDir: /workspace
      initContainers:
      - command:
        - sh
        - -c
        - npx degit ../../../jobs/build /action
        env:
        - name: npm_config_cache
          value: /tmp/npm-cache
        image: node:17
        name: degit-action
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        volumeMounts:
        - mountPath: /action
          name: action
      restartPolicy: Never
      volumes:
      - emptyDir: {}
        name: workspace
      - emptyDir: {}
        name: action
      - name: workflow
        persistentVolumeClaim:
          claimName: jobs-shared-storage
  ttlSecondsAfterFinished: 1800
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    janitor/ttl: \\"1800\\"
    kapp.k14s.io/change-group: autodevops/test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-group.build-app: autodevops/build-app.test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-group.build-app..kaniko: autodevops/build-app..kaniko.test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-group.build-app.kaniko: autodevops/build-app.kaniko.test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-rule.build-app..credentials: upsert after upserting autodevops/build-app..credentials.test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/nonce: \\"\\"
    kapp.k14s.io/update-strategy: fallback-on-replace
  name: job-feature-branch-1-build-app--kaniko
  namespace: awesome-ci
spec:
  activeDeadlineSeconds: 3600
  backoffLimit: 2
  template:
    metadata:
      annotations: null
      labels: null
    spec:
      containers:
      - command:
        - /busybox/sh
        - -c
        - \\"/kaniko/executor \\\\\\\\\\\\n  --context=dir:///workspace/ \\\\\\\\\\\\n  --dockerfile=Dockerfile
          \\\\\\\\\\\\n  --destination=$CI_REGISTRY/test-jobs-build.dev/app:sha-ffac537e6cbbf934b08745a378932722df287a53
          \\\\\\\\\\\\n  --cache=true \\\\\\\\\\\\n  \\\\n\\"
        env:
        - name: DOCKER_CONFIG
          value: /jobs/docker/config.json
        image: gcr.io/kaniko-project/executor:debug
        imagePullPolicy: IfNotPresent
        name: job
        securityContext:
          fsGroup: 0
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /workspace
          name: workspace
        - mountPath: /action
          name: action
        - mountPath: /workflow
          name: workflow
          subPath: feature-branch-1/ffac537e6cbbf934b08745a378932722df287a53
        workingDir: /workspace
      initContainers:
      - command:
        - sh
        - -c
        - |
          npx degit test-jobs-build.dev#feature-branch-1 \\\\
            /workspace
        env:
        - name: npm_config_cache
          value: /tmp/npm-cache
        image: node:17
        name: degit-repository
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        volumeMounts:
        - mountPath: /workspace
          name: workspace
      - command:
        - sh
        - -c
        - npx degit ../../../jobs/build /action
        env:
        - name: npm_config_cache
          value: /tmp/npm-cache
        image: node:17
        name: degit-action
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        volumeMounts:
        - mountPath: /action
          name: action
      restartPolicy: Never
      volumes:
      - emptyDir: {}
        name: workspace
      - emptyDir: {}
        name: action
      - name: workflow
        persistentVolumeClaim:
          claimName: jobs-shared-storage
  ttlSecondsAfterFinished: 1800
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    janitor/ttl: \\"1800\\"
    kapp.k14s.io/change-group: autodevops/test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-group.build-hasura: autodevops/build-hasura.test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-group.build-hasura..credentials: autodevops/build-hasura..credentials.test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-group.build-hasura.credentials: autodevops/build-hasura.credentials.test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/nonce: \\"\\"
    kapp.k14s.io/update-strategy: fallback-on-replace
  name: job-feature-branch-1-build-hasura--credentials
  namespace: awesome-ci
spec:
  activeDeadlineSeconds: 3600
  backoffLimit: 2
  template:
    metadata:
      annotations: null
      labels: null
    spec:
      containers:
      - command:
        - /bin/bash
        - -c
        - |
          mkdir -p /workflow/docker
          echo \\"{\\\\\\"auths\\\\\\":{\\\\\\"$CI_REGISTRY\\\\\\":{\\\\\\"username\\\\\\":\\\\\\"$CI_REGISTRY_USER\\\\\\",\\\\\\"password\\\\\\":\\\\\\"$CI_REGISTRY_PASSWORD\\\\\\"}}}\\" > $DOCKER_CONFIG
        env:
        - name: DOCKER_CONFIG
          value: /workflow/docker/config.json
        envFrom:
        - secretRef:
            name: harbor
        image: debian:stable
        imagePullPolicy: IfNotPresent
        name: job
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        volumeMounts:
        - mountPath: /workspace
          name: workspace
        - mountPath: /action
          name: action
        - mountPath: /workflow
          name: workflow
          subPath: feature-branch-1/ffac537e6cbbf934b08745a378932722df287a53
        workingDir: /workspace
      initContainers:
      - command:
        - sh
        - -c
        - npx degit ../../../jobs/build /action
        env:
        - name: npm_config_cache
          value: /tmp/npm-cache
        image: node:17
        name: degit-action
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        volumeMounts:
        - mountPath: /action
          name: action
      restartPolicy: Never
      volumes:
      - emptyDir: {}
        name: workspace
      - emptyDir: {}
        name: action
      - name: workflow
        persistentVolumeClaim:
          claimName: jobs-shared-storage
  ttlSecondsAfterFinished: 1800
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    janitor/ttl: \\"1800\\"
    kapp.k14s.io/change-group: autodevops/test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-group.build-hasura: autodevops/build-hasura.test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-group.build-hasura..kaniko: autodevops/build-hasura..kaniko.test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-group.build-hasura.kaniko: autodevops/build-hasura.kaniko.test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-rule.build-hasura..credentials: upsert after upserting autodevops/build-hasura..credentials.test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/nonce: \\"\\"
    kapp.k14s.io/update-strategy: fallback-on-replace
  name: job-feature-branch-1-build-hasura--kaniko
  namespace: awesome-ci
spec:
  activeDeadlineSeconds: 3600
  backoffLimit: 2
  template:
    metadata:
      annotations: null
      labels: null
    spec:
      containers:
      - command:
        - /busybox/sh
        - -c
        - \\"/kaniko/executor \\\\\\\\\\\\n  --context=dir:///workspace/hasura \\\\\\\\\\\\n  --dockerfile=Dockerfile
          \\\\\\\\\\\\n  --destination=$CI_REGISTRY/test-jobs-build.dev/hasura:sha-ffac537e6cbbf934b08745a378932722df287a53
          \\\\\\\\\\\\n  --cache=true \\\\\\\\\\\\n  \\\\n\\"
        env:
        - name: DOCKER_CONFIG
          value: /jobs/docker/config.json
        image: gcr.io/kaniko-project/executor:debug
        imagePullPolicy: IfNotPresent
        name: job
        securityContext:
          fsGroup: 0
          runAsGroup: 0
          runAsUser: 0
        volumeMounts:
        - mountPath: /workspace
          name: workspace
        - mountPath: /action
          name: action
        - mountPath: /workflow
          name: workflow
          subPath: feature-branch-1/ffac537e6cbbf934b08745a378932722df287a53
        workingDir: /workspace
      initContainers:
      - command:
        - sh
        - -c
        - |
          npx degit test-jobs-build.dev#feature-branch-1 \\\\
            /workspace
        env:
        - name: npm_config_cache
          value: /tmp/npm-cache
        image: node:17
        name: degit-repository
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        volumeMounts:
        - mountPath: /workspace
          name: workspace
      - command:
        - sh
        - -c
        - npx degit ../../../jobs/build /action
        env:
        - name: npm_config_cache
          value: /tmp/npm-cache
        image: node:17
        name: degit-action
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        volumeMounts:
        - mountPath: /action
          name: action
      restartPolicy: Never
      volumes:
      - emptyDir: {}
        name: workspace
      - emptyDir: {}
        name: action
      - name: workflow
        persistentVolumeClaim:
          claimName: jobs-shared-storage
  ttlSecondsAfterFinished: 1800
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    janitor/ttl: \\"1800\\"
    kapp.k14s.io/change-group: autodevops/test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-group.db: autodevops/db.test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-group.db..create-db: autodevops/db..create-db.test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-group.db.create-db: autodevops/db.create-db.test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-rule.db..create-secret: upsert after upserting autodevops/db..create-secret.test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/nonce: \\"\\"
    kapp.k14s.io/update-strategy: fallback-on-replace
  name: job-feature-branch-1-db--create-db
  namespace: awesome-ci
spec:
  activeDeadlineSeconds: 3600
  backoffLimit: 2
  template:
    metadata:
      annotations: null
      labels: null
    spec:
      containers:
      - command:
        - /bin/bash
        - -c
        - |
          /action/ensure-db.sh
        env:
        - name: NEW_DB_NAME
          valueFrom:
            secretKeyRef:
              key: PGDATABASE
              name: pg-user-feature-branch-1
        - name: NEW_USER
          valueFrom:
            secretKeyRef:
              key: PGUSER
              name: pg-user-feature-branch-1
        - name: NEW_PASSWORD
          valueFrom:
            secretKeyRef:
              key: PGPASSWORD
              name: pg-user-feature-branch-1
        - name: PGHOST
          valueFrom:
            secretKeyRef:
              key: PGHOST
              name: pg-user-feature-branch-1
        - name: NEW_DB_EXTENSIONS
          value: hstore pgcrypto citext uuid-ossp postgis pg_trgm unaccent
        envFrom:
        - secretRef:
            name: pg-scaleway
        image: ghcr.io/socialgouv/docker/psql:6.70.0
        imagePullPolicy: IfNotPresent
        name: job
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        volumeMounts:
        - mountPath: /workspace
          name: workspace
        - mountPath: /action
          name: action
        - mountPath: /workflow
          name: workflow
          subPath: feature-branch-1/ffac537e6cbbf934b08745a378932722df287a53
        workingDir: /workspace
      initContainers:
      - command:
        - sh
        - -c
        - npx degit ../../../jobs/create-db /action
        env:
        - name: npm_config_cache
          value: /tmp/npm-cache
        image: node:17
        name: degit-action
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        volumeMounts:
        - mountPath: /action
          name: action
      restartPolicy: Never
      volumes:
      - emptyDir: {}
        name: workspace
      - emptyDir: {}
        name: action
      - name: workflow
        persistentVolumeClaim:
          claimName: jobs-shared-storage
  ttlSecondsAfterFinished: 1800
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    janitor/ttl: \\"1800\\"
    kapp.k14s.io/change-group: autodevops/test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-group.db: autodevops/db.test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-group.db..create-secret: autodevops/db..create-secret.test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-group.db.create-secret: autodevops/db.create-secret.test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/nonce: \\"\\"
    kapp.k14s.io/update-strategy: fallback-on-replace
  name: job-feature-branch-1-db--create-secret
  namespace: awesome-ci
spec:
  activeDeadlineSeconds: 3600
  backoffLimit: 2
  template:
    metadata:
      annotations: null
      labels: null
    spec:
      containers:
      - command:
        - /bin/bash
        - -c
        - |
          /action/create-secret.sh
        env:
        - name: DB_SECRET_NAME
          value: pg-user-feature-branch-1
        - name: JOB_NAMESPACE
          value: awesome-ci
        - name: NAMESPACE
          value: test-jobs-build-dev-feature-branch-1-312rwy
        - name: PGDATABASE
          value: autodevops_feature-branch-1
        - name: PGUSER
          value: user_feature-branch-1
        envFrom:
        - secretRef:
            name: pg-scaleway
        - secretRef:
            name: kubeconfig
        image: bitnami/kubectl:latest
        imagePullPolicy: IfNotPresent
        name: job
        securityContext:
          fsGroup: 1001
          runAsGroup: 1001
          runAsUser: 1001
        volumeMounts:
        - mountPath: /workspace
          name: workspace
        - mountPath: /action
          name: action
        - mountPath: /workflow
          name: workflow
          subPath: feature-branch-1/ffac537e6cbbf934b08745a378932722df287a53
        workingDir: /workspace
      initContainers:
      - command:
        - sh
        - -c
        - npx degit ../../../jobs/create-db /action
        env:
        - name: npm_config_cache
          value: /tmp/npm-cache
        image: node:17
        name: degit-action
        securityContext:
          fsGroup: 1001
          runAsGroup: 1000
          runAsUser: 1000
        volumeMounts:
        - mountPath: /action
          name: action
      restartPolicy: Never
      volumes:
      - emptyDir: {}
        name: workspace
      - emptyDir: {}
        name: action
      - name: workflow
        persistentVolumeClaim:
          claimName: jobs-shared-storage
  ttlSecondsAfterFinished: 1800
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    kapp.k14s.io/change-group: autodevops/post-test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-rule: upsert after upserting autodevops/test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/nonce: \\"\\"
    kapp.k14s.io/update-strategy: fallback-on-replace
  name: jobci-post-operations-jobs
  namespace: awesome-ci
spec:
  activeDeadlineSeconds: 3600
  backoffLimit: 1
  template:
    metadata:
      annotations: {}
      labels: {}
    spec:
      containers:
      - command:
        - /bin/sh
        - -c
        - rm -rf /workflow/*
        image: debian:stable
        imagePullPolicy: IfNotPresent
        name: job
        volumeMounts:
        - mountPath: /workflow
          name: workflow
          subPath: feature-branch-1/ffac537e6cbbf934b08745a378932722df287a53
      restartPolicy: Never
      volumes:
      - name: workflow
        persistentVolumeClaim:
          claimName: jobs-shared-storage
  ttlSecondsAfterFinished: 1800
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    kapp.k14s.io/change-group: autodevops/post-test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-rule: upsert after upserting autodevops/test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/nonce: \\"\\"
    kapp.k14s.io/update-strategy: fallback-on-replace
  name: jobci-post-operations-jobs-dev
  namespace: awesome-ci
spec:
  activeDeadlineSeconds: 3600
  backoffLimit: 1
  template:
    metadata:
      annotations: {}
      labels: {}
    spec:
      containers:
      - command:
        - /bin/sh
        - -c
        - rm -rf /workflow/*
        image: debian:stable
        imagePullPolicy: IfNotPresent
        name: job
        volumeMounts:
        - mountPath: /workflow
          name: workflow
          subPath: feature-branch-1/ffac537e6cbbf934b08745a378932722df287a53
      restartPolicy: Never
      volumes:
      - name: workflow
        persistentVolumeClaim:
          claimName: jobs-shared-storage
  ttlSecondsAfterFinished: 1800
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
  labels:
    application: test-jobs-build.dev
    component: app
  name: app
  namespace: test-jobs-build-dev-feature-branch-1-312rwy
spec:
  rules:
  - host: test-jobs-build-dev-feature-branch-1-312rwy.dev.fabrique.social.gouv.fr
    http:
      paths:
      - backend:
          service:
            name: app
            port:
              name: http
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - test-jobs-build-dev-feature-branch-1-312rwy.dev.fabrique.social.gouv.fr
    secretName: app-crt
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
  labels:
    application: test-jobs-build.dev
    component: hasura
  name: hasura
  namespace: test-jobs-build-dev-feature-branch-1-312rwy
spec:
  rules:
  - host: hasura-test-jobs-build-dev-feature-branch-1-312rwy.dev.fabrique.social.gouv.fr
    http:
      paths:
      - backend:
          service:
            name: hasura
            port:
              name: http
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - hasura-test-jobs-build-dev-feature-branch-1-312rwy.dev.fabrique.social.gouv.fr
    secretName: wildcard-crt
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
  labels:
    application: test-jobs-build.dev
    component: pgweb
  name: pgweb
  namespace: test-jobs-build-dev-feature-branch-1-312rwy
spec:
  rules:
  - host: pgweb-test-jobs-build-dev-feature-branch-1-312rwy.dev.fabrique.social.gouv.fr
    http:
      paths:
      - backend:
          service:
            name: pgweb
            port:
              name: http
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - pgweb-test-jobs-build-dev-feature-branch-1-312rwy.dev.fabrique.social.gouv.fr
    secretName: pgweb-crt
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: netpol-ingress
  namespace: test-jobs-build-dev-feature-branch-1-312rwy
spec:
  ingress:
  - from:
    - podSelector: {}
  - from:
    - namespaceSelector:
        matchLabels:
          network-policy/source: ingress-controller
  - from:
    - namespaceSelector:
        matchLabels:
          network-policy/source: monitoring
  podSelector: {}
  policyTypes:
  - Ingress
"
`;
