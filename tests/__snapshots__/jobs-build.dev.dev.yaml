// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`jobs-build.dev.dev 1`] = `
"apiVersion: v1
kind: Namespace
metadata:
  annotations:
    field.cattle.io/projectId: \\"1234\\"
    git/branch: refs/heads/feature-branch-1
    janitor/ttl: 7d
  labels:
    application: test-jobs-build.dev
    cert: wildcard
  name: test-jobs-build-dev-feature-branch-1-312rwy
  namespace: test-jobs-build-dev-feature-branch-1-312rwy
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels: {}
  name: jobs-shared-storage
  namespace: awesome-ci
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
  storageClassName: azurefile
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: jobci-clean-workflow
  namespace: awesome-ci
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/bash
            - -c
            - |
              echo \\"$KUBECONFIG\\" > ~/.kube/config
              export KUBECONFIG=~/.kube/config
              export JOB_NAMESPACE=\\"awesome-ci\\"
              ACTIVE_JOBS=$(kubectl get jobs -n $JOB_NAMESPACE -o json | jq \\".items | .[] | select(.status.active > 0).metadata.name\\")
              for subdir in /workflow/*; do

                [ -d \\"$subdir\\" ] || continue
                subdir_basename=\${subdir##*/}
                if ! echo $ACTIVE_JOBS | grep -e \\"job-\${subdir_basename}\\"; then
                  echo \\"Cleaning '$subdir'\\"
                  rm -rf $subdir
                fi
              done
            envFrom:
            - secretRef:
                name: kubeconfig
            image: bitnami/kubectl:latest
            imagePullPolicy: IfNotPresent
            name: job
            volumeMounts:
            - mountPath: /workflow
              name: workflow
          restartPolicy: Never
          volumes:
          - name: workflow
            persistentVolumeClaim:
              claimName: jobs-shared-storage
  schedule: 0 0 * * *
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    janitor/ttl: \\"1800\\"
    kapp.k14s.io/change-group: autodevops/test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-group.build-app: autodevops/build-app.test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-group.build-app..credentials: autodevops/build-app..credentials.test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-group.build-app.credentials: autodevops/build-app.credentials.test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/nonce: \\"\\"
    kapp.k14s.io/update-strategy: fallback-on-replace
  name: job-feature-branch-1-build-app--credentials
  namespace: awesome-ci
spec:
  activeDeadlineSeconds: 3600
  backoffLimit: 3
  template:
    metadata:
      annotations: null
      labels: null
    spec:
      containers:
      - command:
        - /bin/bash
        - -c
        - |
          echo \\"{\\\\\\"auths\\\\\\":{\\\\\\"$CI_REGISTRY\\\\\\":{\\\\\\"username\\\\\\":\\\\\\"$CI_REGISTRY_USER\\\\\\",\\\\\\"password\\\\\\":\\\\\\"$CI_REGISTRY_PASSWORD\\\\\\"}}}\\" > $DOCKER_CONFIG
        env:
        - name: DOCKER_CONFIG
          value: /jobs/docker/config.json
        image: alpine:3
        imagePullPolicy: IfNotPresent
        name: job
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        volumeMounts:
        - mountPath: /workspace
          name: workspace
        - mountPath: /action
          name: action
        - mountPath: /workflow
          name: workflow
          subPath: feature-branch-1/ffac537e6cbbf934b08745a378932722df287a53
      initContainers:
      - command:
        - sh
        - -c
        - npx degit ../../../jobs/build /action
        env:
        - name: npm_config_cache
          value: /tmp/npm-cache
        image: node:17
        name: degit-action
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        volumeMounts:
        - mountPath: /action
          name: action
      restartPolicy: Never
      volumes:
      - emptyDir: {}
        name: workspace
      - emptyDir: {}
        name: action
      - name: workflow
        persistentVolumeClaim:
          claimName: jobs-shared-storage
  ttlSecondsAfterFinished: 1800
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    janitor/ttl: \\"1800\\"
    kapp.k14s.io/change-group: autodevops/test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-group.build-app: autodevops/build-app.test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-group.build-app..kaniko: autodevops/build-app..kaniko.test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-group.build-app.kaniko: autodevops/build-app.kaniko.test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-rule.build-app..credentials: upsert after upserting autodevops/build-app..credentials.test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/nonce: \\"\\"
    kapp.k14s.io/update-strategy: fallback-on-replace
  name: job-feature-branch-1-build-app--kaniko
  namespace: awesome-ci
spec:
  activeDeadlineSeconds: 3600
  backoffLimit: 3
  template:
    metadata:
      annotations: null
      labels: null
    spec:
      containers:
      - command:
        - /busybox/sh
        - -c
        - |
          /kaniko/executor \\\\ --context=dir:///workspace/ \\\\ --dockerfile=Dockerfile \\\\ --destination=$CI_REGISTRY/test-jobs-build.dev/app:sha-ffac537e6cbbf934b08745a378932722df287a53 \\\\ --cache=true \\\\--build-arg=\\"FOO=BAR\\"
        env:
        - name: DOCKER_CONFIG
          value: /jobs/docker/config.json
        image: gcr.io/kaniko-project/executor:debug
        imagePullPolicy: IfNotPresent
        name: job
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        volumeMounts:
        - mountPath: /workspace
          name: workspace
        - mountPath: /action
          name: action
        - mountPath: /workflow
          name: workflow
          subPath: feature-branch-1/ffac537e6cbbf934b08745a378932722df287a53
      initContainers:
      - command:
        - sh
        - -c
        - |
          npx degit test-jobs-build.dev#feature-branch-1 \\\\
            /workspace
        env:
        - name: npm_config_cache
          value: /tmp/npm-cache
        image: node:17
        name: degit-repository
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        volumeMounts:
        - mountPath: /workspace
          name: workspace
      - command:
        - sh
        - -c
        - npx degit ../../../jobs/build /action
        env:
        - name: npm_config_cache
          value: /tmp/npm-cache
        image: node:17
        name: degit-action
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        volumeMounts:
        - mountPath: /action
          name: action
      restartPolicy: Never
      serviceAccountName: kaniko
      volumes:
      - emptyDir: {}
        name: workspace
      - emptyDir: {}
        name: action
      - name: workflow
        persistentVolumeClaim:
          claimName: jobs-shared-storage
  ttlSecondsAfterFinished: 1800
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    janitor/ttl: \\"1800\\"
    kapp.k14s.io/change-group: autodevops/test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-group.build-hasura: autodevops/build-hasura.test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-group.build-hasura..credentials: autodevops/build-hasura..credentials.test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-group.build-hasura.credentials: autodevops/build-hasura.credentials.test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/nonce: \\"\\"
    kapp.k14s.io/update-strategy: fallback-on-replace
  name: job-feature-branch-1-build-hasura--credentials
  namespace: awesome-ci
spec:
  activeDeadlineSeconds: 3600
  backoffLimit: 3
  template:
    metadata:
      annotations: null
      labels: null
    spec:
      containers:
      - command:
        - /bin/bash
        - -c
        - |
          echo \\"{\\\\\\"auths\\\\\\":{\\\\\\"$CI_REGISTRY\\\\\\":{\\\\\\"username\\\\\\":\\\\\\"$CI_REGISTRY_USER\\\\\\",\\\\\\"password\\\\\\":\\\\\\"$CI_REGISTRY_PASSWORD\\\\\\"}}}\\" > $DOCKER_CONFIG
        env:
        - name: DOCKER_CONFIG
          value: /jobs/docker/config.json
        image: alpine:3
        imagePullPolicy: IfNotPresent
        name: job
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        volumeMounts:
        - mountPath: /workspace
          name: workspace
        - mountPath: /action
          name: action
        - mountPath: /workflow
          name: workflow
          subPath: feature-branch-1/ffac537e6cbbf934b08745a378932722df287a53
      initContainers:
      - command:
        - sh
        - -c
        - npx degit ../../../jobs/build /action
        env:
        - name: npm_config_cache
          value: /tmp/npm-cache
        image: node:17
        name: degit-action
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        volumeMounts:
        - mountPath: /action
          name: action
      restartPolicy: Never
      volumes:
      - emptyDir: {}
        name: workspace
      - emptyDir: {}
        name: action
      - name: workflow
        persistentVolumeClaim:
          claimName: jobs-shared-storage
  ttlSecondsAfterFinished: 1800
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    janitor/ttl: \\"1800\\"
    kapp.k14s.io/change-group: autodevops/test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-group.build-hasura: autodevops/build-hasura.test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-group.build-hasura..kaniko: autodevops/build-hasura..kaniko.test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-group.build-hasura.kaniko: autodevops/build-hasura.kaniko.test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-rule.build-hasura..credentials: upsert after upserting autodevops/build-hasura..credentials.test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/nonce: \\"\\"
    kapp.k14s.io/update-strategy: fallback-on-replace
  name: job-feature-branch-1-build-hasura--kaniko
  namespace: awesome-ci
spec:
  activeDeadlineSeconds: 3600
  backoffLimit: 3
  template:
    metadata:
      annotations: null
      labels: null
    spec:
      containers:
      - command:
        - /busybox/sh
        - -c
        - |
          /kaniko/executor \\\\ --context=dir:///workspace/hasura \\\\ --dockerfile=Dockerfile \\\\ --destination=$CI_REGISTRY/test-jobs-build.dev/hasura:sha-ffac537e6cbbf934b08745a378932722df287a53 \\\\ --cache=true \\\\
        env:
        - name: DOCKER_CONFIG
          value: /jobs/docker/config.json
        image: gcr.io/kaniko-project/executor:debug
        imagePullPolicy: IfNotPresent
        name: job
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        volumeMounts:
        - mountPath: /workspace
          name: workspace
        - mountPath: /action
          name: action
        - mountPath: /workflow
          name: workflow
          subPath: feature-branch-1/ffac537e6cbbf934b08745a378932722df287a53
      initContainers:
      - command:
        - sh
        - -c
        - |
          npx degit test-jobs-build.dev#feature-branch-1 \\\\
            /workspace
        env:
        - name: npm_config_cache
          value: /tmp/npm-cache
        image: node:17
        name: degit-repository
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        volumeMounts:
        - mountPath: /workspace
          name: workspace
      - command:
        - sh
        - -c
        - npx degit ../../../jobs/build /action
        env:
        - name: npm_config_cache
          value: /tmp/npm-cache
        image: node:17
        name: degit-action
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
        volumeMounts:
        - mountPath: /action
          name: action
      restartPolicy: Never
      serviceAccountName: kaniko
      volumes:
      - emptyDir: {}
        name: workspace
      - emptyDir: {}
        name: action
      - name: workflow
        persistentVolumeClaim:
          claimName: jobs-shared-storage
  ttlSecondsAfterFinished: 1800
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    kapp.k14s.io/change-group: autodevops/post-test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/change-rule: upsert after upserting autodevops/test-jobs-build-dev-feature-branch-1-312rwy
    kapp.k14s.io/nonce: \\"\\"
    kapp.k14s.io/update-strategy: fallback-on-replace
  name: jobci-post-operations
  namespace: awesome-ci
spec:
  activeDeadlineSeconds: 3600
  backoffLimit: 1
  template:
    metadata:
      annotations: {}
      labels: {}
    spec:
      containers:
      - command:
        - /bin/sh
        - -c
        - rm -rf /workflow/*
        image: debian:stable
        imagePullPolicy: IfNotPresent
        name: job
        volumeMounts:
        - mountPath: /workflow
          name: workflow
          subPath: feature-branch-1/ffac537e6cbbf934b08745a378932722df287a53
      restartPolicy: Never
      volumes:
      - name: workflow
        persistentVolumeClaim:
          claimName: jobs-shared-storage
  ttlSecondsAfterFinished: 1800
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: netpol-ingress
  namespace: test-jobs-build-dev-feature-branch-1-312rwy
spec:
  ingress:
  - from:
    - podSelector: {}
  - from:
    - namespaceSelector:
        matchLabels:
          network-policy/source: ingress-controller
  - from:
    - namespaceSelector:
        matchLabels:
          network-policy/source: monitoring
  podSelector: {}
  policyTypes:
  - Ingress
"
`;
