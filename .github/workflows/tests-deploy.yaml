name: âœ… Tests deploy ðŸš€

on:
  push:
    branches:
      - "**"
      - "!v*"
    tags-ignore:
      - "**"

concurrency:
  cancel-in-progress: true
  group: tests-deploy-${{ github.ref_name }}

jobs:
  test-kind-deployment:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        nodeVersion: [16.17, 18, 20]
        testParams:
          - cwd: .github/e2e/standalone-charts
            testScript: |
              kubectl get jobs -n test-project-ci
              kubectl get jobs -n test-project-ci --field-selector status.successful=1 | grep "extra-job" # additionnal grep to exit 1 on error

          - cwd: .github/e2e/values-js
            testScript: |
              kubectl get pods -n test-namespace
              kubectl get pods -n test-namespace --field-selector=status.phase=Running | grep "app"
              kubectl get ingress -n test-namespace --field-selector metadata.name=app -o=jsonpath='{.items[0].spec.rules[0].host}' | grep "test.demo.net"

          - cwd: .github/e2e/app-simple
            inlineValues: |
              app:
                image: nginx
                containerPort: 80
            testScript: |
              kubectl get pods -n kontinuous
              kubectl get pods -n kontinuous --field-selector=status.phase=Running | grep "app"

          - cwd: .github/e2e/app-simple
            inlineValues: |
              global:
                imageRepository: ""
              app:
                imagePackage: nginx
                imageRepository: ""
                registry: docker.io
                containerPort: 80
                imageTag: 1.21.6
            testScript: |
              kubectl get pods -n kontinuous
              kubectl get pods -n kontinuous --field-selector=status.phase=Running | grep "app"
              kubectl get pods -n kontinuous --field-selector=status.phase=Running -o jsonpath="{.items[*].spec.containers[*].image}" | grep "docker.io/nginx:1.21.6"

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.nodeVersion }}
          cache: "yarn"

      - name: Yarn install
        run: |
          yarn workspaces focus kontinuous --production

      - name: Kubernetes KinD Cluster
        uses: helm/kind-action@v1.5.0
      - name: prepare kontinuous
        shell: bash
        run: |
          mkdir -p $HOME/.kontinuous

          echo "
          links:
            socialgouv/kontinuous: ${GITHUB_WORKSPACE}
          dependencies:
            fabrique:
              dependencies:
                contrib:
                  preDeploy:
                    rancherNamespaces:
                      enabled: false
          " > $HOME/.kontinuous/config.yaml

          kubectl cluster-info
          kubectl version
          kubectl get pods -n kube-system
          kubectl create ns test-project-ci

      - name: test deploy-via-github
        shell: bash
        env:
          KS_DEBUG: "true"
          KS_KUBECONFIG_CONTEXT: kind-chart-testing
          KS_CI_NAMESPACE: test-project-ci
          RANCHER_PROJECT_ID: "cluster:project"
          KS_ENVIRONMENT: prod
          KS_INLINE_SET: |
            global.antiAffinity.enabled: false
          KS_INLINE_VALUES: |
            ${{ matrix.testParams.inlineValues || '' }}
          KS_WORKSPACE_PATH: ${{ matrix.testParams.cwd }}
          KS_INLINE_CONFIG_SET: |
            dependencies.fabrique.dependencies.contrib.preDeploy.cleanOrphan.options.crdApiResources: []
        run: ./kontinuous deploy

      - name: run test script
        shell: bash
        run: |
          set -e
          ${{ matrix.testParams.testScript }}
