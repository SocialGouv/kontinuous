name: Tests deploy

on:
  push:
    branches:
      - '**'

  workflow_run:
    workflows: ["Build Docker Image Kontinuous"]
    types:
      - completed

concurrency:
  cancel-in-progress: true
  group: tests-deploy-${{ github.ref_name }}

jobs:
  test-standalone-charts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Kubernetes KinD Cluster
        uses: helm/kind-action@v1.4.0
      - name: prepare kontinuous
        shell: bash
        run: |
          export KUBECONFIG=$HOME/.kube/config # if not already set 
          export KIND_EXPERIMENTAL_DOCKER_NETWORK=${{ job.container.network }}

          kind create cluster \
            --kubeconfig $KUBECONFIG \
            --config=./kind-config.yaml

          kubectl config set-cluster kind-kind --server=https://kind-control-plane:6443 
          
          docker network connect kind $(cat /etc/hostname)
          
          ./.github/scripts/test-deploy/prepare-kontinuous.sh

      - name: test standalone-charts
        uses: "./.github/actions/deploy-via-github"
        env:
          KS_KUBECONFIG_CONTEXT: "kind-chart-testing"
          KS_CI_NAMESPACE: "test-project-ci"
          RANCHER_PROJECT_ID: "cluster:project"
        with:
          kubeconfig: ${{ env.KUBECONFIG_B64 }}
          environment: prod
          inlineSet: |
            global.antiAffinity.enabled: false
          cwd: .github/e2e/standalone-charts
      - run: kubectl get jobs -n test-project-ci
      - run: kubectl get jobs -n test-project-ci --field-selector status.successful=1 | grep "extra-job" # additionnal grep to exit 1 on error

  # test-values-js:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Kubernetes KinD Cluster
  #       uses: helm/kind-action@v1.4.0
  #     - name: prepare kontinuous
  #       shell: bash
  #       run: ./.github/scripts/test-deploy/prepare-kontinuous.sh
  #     - name: test values-js
  #       uses: "./.github/actions/deploy-via-github"
  #       env:
  #         KS_KUBECONFIG_CONTEXT: "kind-chart-testing"
  #         KS_CI_NAMESPACE: "test-project-ci"
  #         RANCHER_PROJECT_ID: "cluster:project"
  #       with:
  #         kubeconfig: ${{ env.KUBECONFIG_B64 }}
  #         environment: prod
  #         inlineSet: |
  #           global.antiAffinity.enabled: false
  #         cwd: .github/e2e/values-js
  #     - run: kubectl get pods -n test-namespace
  #     - name: pod is running
  #       run: kubectl get pods -n test-namespace --field-selector=status.phase=Running | grep "app"
  #     - name: ingress
  #       run: kubectl get ingress -n test-namespace --field-selector metadata.name=app -o=jsonpath='{.items[0].spec.rules[0].host}' | grep "test.demo.net"

  # app-review:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Kubernetes KinD Cluster
  #       uses: helm/kind-action@v1.4.0
  #     - name: prepare kontinuous
  #       shell: bash
  #       run: ./.github/scripts/test-deploy/prepare-kontinuous.sh
  #     - name: test app-simple
  #       uses: "./.github/actions/deploy-via-github"
  #       env:
  #         KS_KUBECONFIG_CONTEXT: "kind-chart-testing"
  #         KS_CI_NAMESPACE: "test-project-ci"
  #         RANCHER_PROJECT_ID: "cluster:project"
  #       with:
  #         kubeconfig: ${{ env.KUBECONFIG_B64 }}
  #         environment: prod
  #         inlineSet: |
  #           global.antiAffinity.enabled: false
  #         cwd: .github/e2e/app-simple
  #         inlineValues: |
  #           app:
  #             image: nginx
  #             containerPort: 80
  #     - run: kubectl get pods -n kontinuous
  #     - run: kubectl get pods -n kontinuous --field-selector=status.phase=Running | grep "app"

  # app-tag:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Kubernetes KinD Cluster
  #       uses: helm/kind-action@v1.4.0
  #     - name: prepare kontinuous
  #       shell: bash
  #       run: ./.github/scripts/test-deploy/prepare-kontinuous.sh
  #     - name: test app-simple
  #       uses: "./.github/actions/deploy-via-github"
  #       env:
  #         KS_KUBECONFIG_CONTEXT: "kind-chart-testing"
  #         KS_CI_NAMESPACE: "test-project-ci"
  #         RANCHER_PROJECT_ID: "cluster:project"
  #       with:
  #         kubeconfig: ${{ env.KUBECONFIG_B64 }}
  #         environment: prod
  #         inlineSet: |
  #           global.antiAffinity.enabled: false
  #         cwd: .github/e2e/app-simple
  #         inlineValues: |
  #           global:
  #             imageRepository: ""
  #           app:
  #             imagePackage: nginx
  #             imageRepository: ""
  #             registry: docker.io
  #             containerPort: 80
  #             imageTag: 1.21.6
  #     - run: kubectl get pods -n kontinuous
  #     - run: kubectl get pods -n kontinuous --field-selector=status.phase=Running | grep "app"
  #     - name: "use tagged image"
  #       run:
  #         kubectl get pods -n kontinuous --field-selector=status.phase=Running -o jsonpath="{.items[*].spec.containers[*].image}" | grep "docker.io/nginx:1.21.6" 