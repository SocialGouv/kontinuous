// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`post-renderer.dev.dev 1`] = `
"apiVersion: v1
kind: Namespace
metadata:
  annotations:
    field.cattle.io/projectId: \\"1234\\"
    janitor/ttl: 7d
    kubeWorkflow/gitBranch: feature-branch-1
    kubeWorkflow/mainNamespace: \\"true\\"
  labels:
    application: test-post-renderer.dev
    cert: wildcard
  name: test-post-renderer-dev-feature-branch-1-5yqz79
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kapp.k14s.io/disable-default-label-scoping-rules: \\"\\"
    kapp.k14s.io/disable-default-ownership-label-rules: \\"\\"
  labels:
    application: test-post-renderer.dev
    component: app
  name: app
  namespace: test-post-renderer-dev-feature-branch-1-5yqz79
spec:
  ports:
  - name: http
    port: 80
    targetPort: 3000
  selector:
    component: app
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kapp.k14s.io/change-group: autodevops/test-post-renderer-dev-feature-branch-1-5yqz79
    kapp.k14s.io/change-group.app: autodevops/app.test-post-renderer-dev-feature-branch-1-5yqz79
    kapp.k14s.io/create-strategy: fallback-on-update
    kapp.k14s.io/disable-default-label-scoping-rules: \\"\\"
    kapp.k14s.io/disable-default-ownership-label-rules: \\"\\"
    kapp.k14s.io/nonce: \\"\\"
    kapp.k14s.io/update-strategy: fallback-on-replace
  labels:
    application: test-post-renderer.dev
    component: app
  name: app
  namespace: test-post-renderer-dev-feature-branch-1-5yqz79
spec:
  replicas: 1
  selector:
    matchLabels:
      component: app
  template:
    metadata:
      labels:
        application: test-post-renderer.dev
        component: app
    spec:
      containers:
      - env: null
        envFrom: null
        image: ghcr.io/socialgouv/test-post-renderer.dev/app:sha-ffac537e6cbbf934b08745a378932722df287a53
        livenessProbe:
          failureThreshold: 15
          httpGet:
            path: /index.html
            port: http
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 5
        name: app
        ports:
        - containerPort: 3000
          name: http
        readinessProbe:
          failureThreshold: 15
          httpGet:
            path: /index.html
            port: http
          initialDelaySeconds: 0
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 128Mi
        startupProbe:
          failureThreshold: 12
          httpGet:
            path: /index.html
            port: http
          periodSeconds: 5
        volumeMounts: null
      initContainers: null
      volumes: null
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
  labels:
    application: test-post-renderer.dev
    component: app
  name: app
  namespace: test-post-renderer-dev-feature-branch-1-5yqz79
spec:
  rules:
  - host: test-post-renderer-dev-feature-branch-1-5yqz79.dev.fabrique.social.gouv.fr
    http:
      paths:
      - backend:
          service:
            name: app
            port:
              name: http
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - test-post-renderer-dev-feature-branch-1-5yqz79.dev.fabrique.social.gouv.fr
    secretName: app-crt
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: netpol-ingress
  namespace: test-post-renderer-dev-feature-branch-1-5yqz79
spec:
  ingress:
  - from:
    - podSelector: {}
  - from:
    - namespaceSelector:
        matchLabels:
          network-policy/source: ingress-controller
  - from:
    - namespaceSelector:
        matchLabels:
          network-policy/source: monitoring
  podSelector: {}
  policyTypes:
  - Ingress
"
`;
