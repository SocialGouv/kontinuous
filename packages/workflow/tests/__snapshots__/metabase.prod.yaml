// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`metabase.prod 1`] = `
"apiVersion: v1
kind: Namespace
metadata:
  annotations:
    field.cattle.io/projectId: \\"1234\\"
    kubeWorkflow/gitBranch: feature-branch-1
    kubeWorkflow/mainNamespace: \\"true\\"
  labels:
    application: test-metabase
  name: test-metabase
---
apiVersion: v1
data:
  MB_ADMIN_EMAIL: admin@fabrique.social.gouv.fr
  MB_ANON_TRACKING_ENABLED: \\"false\\"
  MB_APPLICATION_LOGO_URL: https://socialgouv.github.io/support/_media/marianne.jpeg
  MB_APPLICATION_NAME: metabase-app1
  MB_DB_TYPE: postgres
  MB_EMAIL_FROM_ADDRESS: contact@fabrique.social.gouv.fr
  MB_ENABLE_EMBEDDING: \\"true\\"
  MB_ENABLE_PUBLIC_SHARING: \\"true\\"
  MB_SITE_LOCALE: fr
  MB_SITE_NAME: Fabrique des ministères sociaux
  MB_SITE_URL: https://metabase-app1-test-metabase.fabrique.social.gouv.fr
kind: ConfigMap
metadata:
  labels:
    application: test-metabase
    component: metabase-app1
  name: metabase-app1
  namespace: test-metabase
---
apiVersion: v1
data:
  MB_ADMIN_EMAIL: admin@fabrique.social.gouv.fr
  MB_ANON_TRACKING_ENABLED: \\"false\\"
  MB_APPLICATION_LOGO_URL: https://socialgouv.github.io/support/_media/marianne.jpeg
  MB_APPLICATION_NAME: metabase-app2
  MB_DB_TYPE: postgres
  MB_EMAIL_FROM_ADDRESS: contact@fabrique.social.gouv.fr
  MB_ENABLE_EMBEDDING: \\"true\\"
  MB_ENABLE_PUBLIC_SHARING: \\"true\\"
  MB_SITE_LOCALE: fr
  MB_SITE_NAME: Fabrique des ministères sociaux
  MB_SITE_URL: https://metabase-app2-test-metabase.fabrique.social.gouv.fr
kind: ConfigMap
metadata:
  labels:
    application: test-metabase
    component: metabase-app2
  name: metabase-app2
  namespace: test-metabase
---
apiVersion: v1
data:
  METABASE_ENV: production
kind: ConfigMap
metadata:
  name: metabase1-configmap
  namespace: test-metabase
---
apiVersion: v1
data:
  METABASE_ENV: production
kind: ConfigMap
metadata:
  name: metabase2-configmap
  namespace: test-metabase
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kapp.k14s.io/disable-default-label-scoping-rules: \\"\\"
    kapp.k14s.io/disable-default-ownership-label-rules: \\"\\"
  labels:
    application: test-metabase
    component: metabase-app1
  name: metabase-app1
  namespace: test-metabase
spec:
  ports:
  - name: http
    port: 80
    targetPort: 3000
  selector:
    component: metabase-app1
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kapp.k14s.io/disable-default-label-scoping-rules: \\"\\"
    kapp.k14s.io/disable-default-ownership-label-rules: \\"\\"
  labels:
    application: test-metabase
    component: metabase-app2
  name: metabase-app2
  namespace: test-metabase
spec:
  ports:
  - name: http
    port: 80
    targetPort: 3000
  selector:
    component: metabase-app2
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kapp.k14s.io/change-group: autodevops/test-metabase
    kapp.k14s.io/change-group.metabase-app1: autodevops/metabase-app1.test-metabase
    kapp.k14s.io/create-strategy: fallback-on-update
    kapp.k14s.io/disable-default-label-scoping-rules: \\"\\"
    kapp.k14s.io/disable-default-ownership-label-rules: \\"\\"
    kapp.k14s.io/nonce: \\"\\"
    kapp.k14s.io/update-strategy: fallback-on-replace
  labels:
    application: test-metabase
    component: metabase-app1
  name: metabase-app1
  namespace: test-metabase
spec:
  replicas: 1
  selector:
    matchLabels:
      component: metabase-app1
  template:
    metadata:
      labels:
        application: null
        component: metabase-app1
    spec:
      containers:
      - env: null
        envFrom:
        - configMapRef:
            name: metabase-app1
        - secretRef:
            name: metabase1-sealed-secret
        - configMapRef:
            name: metabase1-configmap
        image: metabase/metabase:v0.41.6
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /api/health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 5
        name: metabase
        ports:
        - containerPort: 3000
          name: http
        readinessProbe:
          failureThreshold: 15
          httpGet:
            path: /api/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 1000m
            memory: 2048Mi
          requests:
            cpu: 500m
            memory: 512Mi
        startupProbe:
          failureThreshold: 12
          httpGet:
            path: /api/health
            port: http
          initialDelaySeconds: 240
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kapp.k14s.io/change-group: autodevops/test-metabase
    kapp.k14s.io/change-group.metabase-app2: autodevops/metabase-app2.test-metabase
    kapp.k14s.io/create-strategy: fallback-on-update
    kapp.k14s.io/disable-default-label-scoping-rules: \\"\\"
    kapp.k14s.io/disable-default-ownership-label-rules: \\"\\"
    kapp.k14s.io/nonce: \\"\\"
    kapp.k14s.io/update-strategy: fallback-on-replace
  labels:
    application: test-metabase
    component: metabase-app2
  name: metabase-app2
  namespace: test-metabase
spec:
  replicas: 1
  selector:
    matchLabels:
      component: metabase-app2
  template:
    metadata:
      labels:
        application: null
        component: metabase-app2
    spec:
      containers:
      - env: null
        envFrom:
        - configMapRef:
            name: metabase-app2
        - secretRef:
            name: metabase2-sealed-secret
        - configMapRef:
            name: metabase2-configmap
        image: metabase/metabase:v0.41.6
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /api/health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 5
        name: metabase
        ports:
        - containerPort: 3000
          name: http
        readinessProbe:
          failureThreshold: 15
          httpGet:
            path: /api/health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 1000m
            memory: 2048Mi
          requests:
            cpu: 500m
            memory: 512Mi
        startupProbe:
          failureThreshold: 12
          httpGet:
            path: /api/health
            port: http
          initialDelaySeconds: 240
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  creationTimestamp: null
  name: metabase1-sealed-secret
  namespace: test-metabase
spec:
  encryptedData:
    METABASE_SECRET: AgBc+UqJhU2ZBfuplyiI3pPekRjm36i62WYR1lVpM9PIwK636R78mpfckIeGU09qKAxWGYBqtYtvNP3lTG8OwEUqKLnUxZPZKbtwc78GwzEzaPpnWmM+j78uBDxqHDiW+jKwnD/6XiWxsfyd1ZU/qS0LDEJBnVRoDyUI0NxzFWLxG8ylr6oK3q+oD3338D588TimklZGOvRm/hI95d5uwKsYPz0zYOj28pgHzNMVycreOXi9l562agyg2hdb8AkFD41utLEURxJOomJUl2xZIjv6FX++R9OJQzRsX6WsCAkLZPO7VEi1cvG6QzPf/uchwystfQfW5c+5ofVJer5mLJJjFcO8OfNbsg/JYlndv4F90cjH2dojSHv/qH/ddpObPgkDpVzCljdTvrir5bl3z3KeqLb20ja1hLJlwOue4zHDCQ6Fwza8VN6BjbHZLYhOO5qlYfWezjwt+B6RdFVzD8wu2JbuWsJo5w2HhMl2Nckar1B8CPxzgRXnFwc/QsFTDXOXX+rtxnC4FJfffZ/2frV745c642AhOArDxk8OGDFkrexr5OMv0iJcY15cl6K9dfZWOKfFd5mxfWFhDWUSAoUZJsz4uVxpTCCoSJBe8Nf1aKk7PkZ+bXtV5bpuktySoPh0hG1M1dUg0WsSC2i6zp75AUxVW6c4GG7d9FMsTHIwyD7fEbV3TMRanSRFYNPOmft/oI7Q3oNGOGg26KCtX414FG02EnpmrttHQguY7cnHGG7i7s8mnyGv
  template:
    metadata:
      creationTimestamp: null
      name: metabase1-sealed-secret
    type: Opaque
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  creationTimestamp: null
  name: metabase2-sealed-secret
  namespace: test-metabase
spec:
  encryptedData:
    METABASE_SECRET: AgBc+UqJhU2ZBfuplyiI3pPekRjm36i62WYR1lVpM9PIwK636R78mpfckIeGU09qKAxWGYBqtYtvNP3lTG8OwEUqKLnUxZPZKbtwc78GwzEzaPpnWmM+j78uBDxqHDiW+jKwnD/6XiWxsfyd1ZU/qS0LDEJBnVRoDyUI0NxzFWLxG8ylr6oK3q+oD3338D588TimklZGOvRm/hI95d5uwKsYPz0zYOj28pgHzNMVycreOXi9l562agyg2hdb8AkFD41utLEURxJOomJUl2xZIjv6FX++R9OJQzRsX6WsCAkLZPO7VEi1cvG6QzPf/uchwystfQfW5c+5ofVJer5mLJJjFcO8OfNbsg/JYlndv4F90cjH2dojSHv/qH/ddpObPgkDpVzCljdTvrir5bl3z3KeqLb20ja1hLJlwOue4zHDCQ6Fwza8VN6BjbHZLYhOO5qlYfWezjwt+B6RdFVzD8wu2JbuWsJo5w2HhMl2Nckar1B8CPxzgRXnFwc/QsFTDXOXX+rtxnC4FJfffZ/2frV745c642AhOArDxk8OGDFkrexr5OMv0iJcY15cl6K9dfZWOKfFd5mxfWFhDWUSAoUZJsz4uVxpTCCoSJBe8Nf1aKk7PkZ+bXtV5bpuktySoPh0hG1M1dUg0WsSC2i6zp75AUxVW6c4GG7d9FMsTHIwyD7fEbV3TMRanSRFYNPOmft/oI7Q3oNGOGg26KCtX414FG02EnpmrttHQguY7cnHGG7i7s8mnyGv
  template:
    metadata:
      creationTimestamp: null
      name: metabase2-sealed-secret
    type: Opaque
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: \\"true\\"
  labels:
    application: test-metabase
    component: metabase-app1
  name: metabase-app1
  namespace: test-metabase
spec:
  rules:
  - host: metabase-app1-test-metabase.fabrique.social.gouv.fr
    http:
      paths:
      - backend:
          service:
            name: metabase-app1
            port:
              name: http
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - metabase-app1-test-metabase.fabrique.social.gouv.fr
    secretName: test-metabase-crt
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: \\"true\\"
  labels:
    application: test-metabase
    component: metabase-app2
  name: metabase-app2
  namespace: test-metabase
spec:
  rules:
  - host: metabase-app2-test-metabase.fabrique.social.gouv.fr
    http:
      paths:
      - backend:
          service:
            name: metabase-app2
            port:
              name: http
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - metabase-app2-test-metabase.fabrique.social.gouv.fr
    secretName: test-metabase-crt
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: netpol-ingress
  namespace: test-metabase
spec:
  ingress:
  - from:
    - podSelector: {}
  - from:
    - namespaceSelector:
        matchLabels:
          network-policy/source: ingress-controller
  - from:
    - namespaceSelector:
        matchLabels:
          network-policy/source: monitoring
  podSelector: {}
  policyTypes:
  - Ingress
"
`;
