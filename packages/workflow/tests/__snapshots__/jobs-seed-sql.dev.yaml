// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`jobs-seed-sql.dev 1`] = `
"apiVersion: v1
kind: Namespace
metadata:
  annotations:
    janitor/ttl: 7d
    field.cattle.io/projectId: '1234'
    kubeworkflow/gitBranch: feature-branch-1
    kubeworkflow/mainNamespace: 'true'
    kapp.k14s.io/exists: ''
  labels:
    application: test-jobs-seed-sql
    cert: wildcard
  name: test-jobs-seed-sql-feature-branch-1
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: netpol-ingress
  namespace: test-jobs-seed-sql-feature-branch-1
  annotations:
    kapp.k14s.io/disable-original: ''
spec:
  ingress:
    - from:
        - podSelector: {}
    - from:
        - namespaceSelector:
            matchLabels:
              network-policy/source: ingress-controller
    - from:
        - namespaceSelector:
            matchLabels:
              network-policy/source: monitoring
  podSelector: {}
  policyTypes:
    - Ingress
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: default
  namespace: test-jobs-seed-sql-feature-branch-1
  annotations:
    kapp.k14s.io/disable-original: ''
automountServiceAccountToken: false
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jobs-shared-storage
  annotations:
    kapp.k14s.io/disable-original: ''
  labels: {}
  namespace: awesome-ci
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
  storageClassName: azurefile
---
apiVersion: v1
kind: Service
metadata:
  labels:
    component: app
    application: test-jobs-seed-sql
  name: app
  namespace: test-jobs-seed-sql-feature-branch-1
  annotations:
    kapp.k14s.io/disable-default-ownership-label-rules: ''
    kapp.k14s.io/disable-default-label-scoping-rules: ''
    kapp.k14s.io/disable-original: ''
spec:
  ports:
    - name: http
      port: 80
      targetPort: 3000
  selector:
    component: app
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: app
    application: test-jobs-seed-sql
  name: app
  namespace: test-jobs-seed-sql-feature-branch-1
  annotations:
    kapp.k14s.io/change-group: kube-workflow/test-jobs-seed-sql-feature-branch-1
    kapp.k14s.io/change-group.app: kube-workflow/app.test-jobs-seed-sql-feature-branch-1
    kapp.k14s.io/change-rule.seed: >-
      upsert after upserting
      kube-workflow/seed.test-jobs-seed-sql-feature-branch-1
    kapp.k14s.io/disable-original: ''
    kapp.k14s.io/create-strategy: fallback-on-update
    kapp.k14s.io/update-strategy: fallback-on-replace
    kapp.k14s.io/nonce: ''
spec:
  replicas: 1
  selector:
    matchLabels:
      component: app
  template:
    metadata:
      labels:
        component: app
        application: test-jobs-seed-sql
    spec:
      containers:
        - image: >-
            ghcr.io/socialgouv/test-jobs-seed-sql/app:sha-ffac537e6cbbf934b08745a378932722df287a53
          livenessProbe:
            failureThreshold: 15
            httpGet:
              path: /index.html
              port: http
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 5
          name: app
          ports:
            - containerPort: 3000
              name: http
          readinessProbe:
            failureThreshold: 15
            httpGet:
              path: /index.html
              port: http
            initialDelaySeconds: 0
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
          startupProbe:
            failureThreshold: 12
            httpGet:
              path: /index.html
              port: http
            periodSeconds: 5
---
apiVersion: batch/v1
kind: Job
metadata:
  name: job-test-jobs-seed-sql-feature-branch-1-db-create-secret-3ea5t8
  namespace: awesome-ci
  annotations:
    kapp.k14s.io/nonce: ''
    kapp.k14s.io/update-strategy: fallback-on-replace
    kapp.k14s.io/change-group: kube-workflow/test-jobs-seed-sql-feature-branch-1
    kapp.k14s.io/change-group.db: kube-workflow/db.test-jobs-seed-sql-feature-branch-1
    kapp.k14s.io/change-group.db.create-secret: kube-workflow/db.create-secret.test-jobs-seed-sql-feature-branch-1
    kapp.k14s.io/change-group.db..create-secret: kube-workflow/db..create-secret.test-jobs-seed-sql-feature-branch-1
    janitor/ttl: '1800'
    kapp.k14s.io/disable-original: ''
    kapp.k14s.io/create-strategy: fallback-on-update
spec:
  backoffLimit: 2
  activeDeadlineSeconds: 3600
  ttlSecondsAfterFinished: 1800
  template:
    metadata: {}
    spec:
      restartPolicy: Never
      initContainers:
        - name: degit-action
          image: ghcr.io/socialgouv/kube-workflow/degit:latest
          command:
            - sh
            - '-c'
            - degit ../../../../../jobs/create-db /action
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1001
          volumeMounts:
            - name: action
              mountPath: /action
      containers:
        - name: job
          image: bitnami/kubectl:latest
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: azure-pg-admin-user
            - secretRef:
                name: kubeconfig
          env:
            - name: DB_SECRET_NAME
              value: pg-user-feature-branch-1
            - name: JOB_NAMESPACE
              value: awesome-ci
            - name: NAMESPACE
              value: test-jobs-seed-sql-feature-branch-1
            - name: PGDATABASE
              value: autodevops_feature-branch-1
            - name: PGUSER
              value: user_feature-branch-1
          command:
            - /bin/bash
            - '-c'
            - |
              set -e
              /action/create-secret.sh
          securityContext:
            runAsUser: 1001
            runAsGroup: 1001
            fsGroup: 1001
          volumeMounts:
            - name: workspace
              mountPath: /workspace
            - name: action
              mountPath: /action
            - name: workflow
              mountPath: /workflow
              subPath: feature-branch-1/ffac537e6cbbf934b08745a378932722df287a53
      volumes:
        - name: workspace
          emptyDir: {}
        - name: action
          emptyDir: {}
        - name: workflow
          persistentVolumeClaim:
            claimName: jobs-shared-storage
---
apiVersion: batch/v1
kind: Job
metadata:
  name: job-test-jobs-seed-sql-feature-branch-1-db-create-db-13oc8a
  namespace: awesome-ci
  annotations:
    kapp.k14s.io/nonce: ''
    kapp.k14s.io/update-strategy: fallback-on-replace
    kapp.k14s.io/change-group: kube-workflow/test-jobs-seed-sql-feature-branch-1
    kapp.k14s.io/change-group.db: kube-workflow/db.test-jobs-seed-sql-feature-branch-1
    kapp.k14s.io/change-group.db.create-db: kube-workflow/db.create-db.test-jobs-seed-sql-feature-branch-1
    kapp.k14s.io/change-group.db..create-db: kube-workflow/db..create-db.test-jobs-seed-sql-feature-branch-1
    kapp.k14s.io/change-rule.db..create-secret: >-
      upsert after upserting
      kube-workflow/db..create-secret.test-jobs-seed-sql-feature-branch-1
    janitor/ttl: '1800'
    kapp.k14s.io/disable-original: ''
    kapp.k14s.io/create-strategy: fallback-on-update
spec:
  backoffLimit: 2
  activeDeadlineSeconds: 3600
  ttlSecondsAfterFinished: 1800
  template:
    metadata: {}
    spec:
      restartPolicy: Never
      initContainers:
        - name: degit-action
          image: ghcr.io/socialgouv/kube-workflow/degit:latest
          command:
            - sh
            - '-c'
            - degit ../../../../../jobs/create-db /action
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
          volumeMounts:
            - name: action
              mountPath: /action
      containers:
        - name: job
          image: ghcr.io/socialgouv/docker/psql:6.70.0
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: azure-pg-admin-user
          env:
            - name: NEW_DB_NAME
              valueFrom:
                secretKeyRef:
                  key: PGDATABASE
                  name: pg-user-feature-branch-1
            - name: NEW_USER
              valueFrom:
                secretKeyRef:
                  key: PGUSER
                  name: pg-user-feature-branch-1
            - name: NEW_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: PGPASSWORD
                  name: pg-user-feature-branch-1
            - name: PGHOST
              valueFrom:
                secretKeyRef:
                  key: PGHOST
                  name: pg-user-feature-branch-1
            - name: NEW_DB_EXTENSIONS
              value: hstore pgcrypto citext uuid-ossp postgis pg_trgm unaccent
          command:
            - /bin/bash
            - '-c'
            - |
              set -e
              /action/ensure-db.sh
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
          volumeMounts:
            - name: workspace
              mountPath: /workspace
            - name: action
              mountPath: /action
            - name: workflow
              mountPath: /workflow
              subPath: feature-branch-1/ffac537e6cbbf934b08745a378932722df287a53
      volumes:
        - name: workspace
          emptyDir: {}
        - name: action
          emptyDir: {}
        - name: workflow
          persistentVolumeClaim:
            claimName: jobs-shared-storage
---
apiVersion: batch/v1
kind: Job
metadata:
  name: job-test-jobs-seed-sql-feature-branch-1-seed-import-sec-shgdmm
  namespace: awesome-ci
  annotations:
    kapp.k14s.io/nonce: ''
    kapp.k14s.io/update-strategy: fallback-on-replace
    kapp.k14s.io/change-group: kube-workflow/test-jobs-seed-sql-feature-branch-1
    kapp.k14s.io/change-group.seed: kube-workflow/seed.test-jobs-seed-sql-feature-branch-1
    kapp.k14s.io/change-group.seed.import-secret: kube-workflow/seed.import-secret.test-jobs-seed-sql-feature-branch-1
    kapp.k14s.io/change-group.seed..import-secret: kube-workflow/seed..import-secret.test-jobs-seed-sql-feature-branch-1
    kapp.k14s.io/change-rule.db: >-
      upsert after upserting
      kube-workflow/db.test-jobs-seed-sql-feature-branch-1
    janitor/ttl: '1800'
    kapp.k14s.io/disable-original: ''
    kapp.k14s.io/create-strategy: fallback-on-update
spec:
  backoffLimit: 2
  activeDeadlineSeconds: 3600
  ttlSecondsAfterFinished: 1800
  template:
    metadata: {}
    spec:
      restartPolicy: Never
      initContainers:
        - name: degit-action
          image: ghcr.io/socialgouv/kube-workflow/degit:latest
          command:
            - sh
            - '-c'
            - degit ../../../../../jobs/seed-db /action
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1001
          volumeMounts:
            - name: action
              mountPath: /action
      containers:
        - name: job
          image: bitnami/kubectl:latest
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: kubeconfig
          env:
            - name: DB_SECRET_NAME
              value: pg-user-feature-branch-1
            - name: JOB_NAMESPACE
              value: awesome-ci
            - name: NAMESPACE
              value: test-jobs-seed-sql-feature-branch-1
          command:
            - /bin/bash
            - '-c'
            - |
              set -e
              /action/import-secret.sh
          securityContext:
            runAsUser: 1001
            runAsGroup: 1001
            fsGroup: 1001
          volumeMounts:
            - name: workspace
              mountPath: /workspace
            - name: action
              mountPath: /action
            - name: workflow
              mountPath: /workflow
              subPath: feature-branch-1/ffac537e6cbbf934b08745a378932722df287a53
      volumes:
        - name: workspace
          emptyDir: {}
        - name: action
          emptyDir: {}
        - name: workflow
          persistentVolumeClaim:
            claimName: jobs-shared-storage
---
apiVersion: batch/v1
kind: Job
metadata:
  name: job-test-jobs-seed-sql-feature-branch-1-seed-seed-db-5pgwgr
  namespace: awesome-ci
  annotations:
    kapp.k14s.io/nonce: ''
    kapp.k14s.io/update-strategy: fallback-on-replace
    kapp.k14s.io/change-group: kube-workflow/test-jobs-seed-sql-feature-branch-1
    kapp.k14s.io/change-group.seed: kube-workflow/seed.test-jobs-seed-sql-feature-branch-1
    kapp.k14s.io/change-group.seed.seed-db: kube-workflow/seed.seed-db.test-jobs-seed-sql-feature-branch-1
    kapp.k14s.io/change-group.seed..seed-db: kube-workflow/seed..seed-db.test-jobs-seed-sql-feature-branch-1
    kapp.k14s.io/change-rule.seed..import-secret: >-
      upsert after upserting
      kube-workflow/seed..import-secret.test-jobs-seed-sql-feature-branch-1
    kapp.k14s.io/change-rule.db: >-
      upsert after upserting
      kube-workflow/db.test-jobs-seed-sql-feature-branch-1
    janitor/ttl: '1800'
    kapp.k14s.io/disable-original: ''
    kapp.k14s.io/create-strategy: fallback-on-update
spec:
  backoffLimit: 2
  activeDeadlineSeconds: 3600
  ttlSecondsAfterFinished: 1800
  template:
    metadata: {}
    spec:
      restartPolicy: Never
      initContainers:
        - name: degit-repository
          image: ghcr.io/socialgouv/kube-workflow/degit:latest
          command:
            - sh
            - '-c'
            - |
              degit kube-workflow/test-jobs-seed-sql#feature-branch-1 \\\\
                /workspace
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
          volumeMounts:
            - name: workspace
              mountPath: /workspace
        - name: degit-action
          image: ghcr.io/socialgouv/kube-workflow/degit:latest
          command:
            - sh
            - '-c'
            - degit ../../../../../jobs/seed-db /action
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
          volumeMounts:
            - name: action
              mountPath: /action
      containers:
        - name: job
          image: ghcr.io/socialgouv/docker/psql:7.0.0
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: pg-user-feature-branch-1
          env:
            - name: SEED_PATH
              value: hasura/seeds/carnet_de_bord/seed-data.sql
          command:
            - /bin/bash
            - '-c'
            - |
              set -e
              /action/seed-db.sh
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
          volumeMounts:
            - name: workspace
              mountPath: /workspace
            - name: action
              mountPath: /action
            - name: workflow
              mountPath: /workflow
              subPath: feature-branch-1/ffac537e6cbbf934b08745a378932722df287a53
      volumes:
        - name: workspace
          emptyDir: {}
        - name: action
          emptyDir: {}
        - name: workflow
          persistentVolumeClaim:
            claimName: jobs-shared-storage
---
apiVersion: batch/v1
kind: Job
metadata:
  name: jobci-post-operations-ffac537
  namespace: awesome-ci
  annotations:
    kapp.k14s.io/nonce: ''
    kapp.k14s.io/update-strategy: fallback-on-replace
    kapp.k14s.io/change-group: kube-workflow/post-test-jobs-seed-sql-feature-branch-1
    kapp.k14s.io/change-rule: upsert after upserting kube-workflow/test-jobs-seed-sql-feature-branch-1
    kapp.k14s.io/disable-original: ''
    kapp.k14s.io/create-strategy: fallback-on-update
spec:
  backoffLimit: 1
  activeDeadlineSeconds: 3600
  ttlSecondsAfterFinished: 1800
  template:
    metadata:
      annotations: {}
      labels: {}
    spec:
      restartPolicy: Never
      containers:
        - name: job
          image: debian:stable
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - '-c'
            - rm -rf /workflow/*
          volumeMounts:
            - name: workflow
              mountPath: /workflow
              subPath: feature-branch-1/ffac537e6cbbf934b08745a378932722df287a53
      volumes:
        - name: workflow
          persistentVolumeClaim:
            claimName: jobs-shared-storage
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: jobci-clean-workflow
  namespace: awesome-ci
  annotations:
    kapp.k14s.io/disable-original: ''
    kapp.k14s.io/create-strategy: fallback-on-update
    kapp.k14s.io/update-strategy: fallback-on-replace
    kapp.k14s.io/nonce: ''
spec:
  schedule: 0 0 * * *
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
          containers:
            - name: job
              image: bitnami/kubectl:latest
              imagePullPolicy: IfNotPresent
              envFrom:
                - secretRef:
                    name: kubeconfig
              command:
                - /bin/bash
                - '-c'
                - >
                  echo \\"$KUBECONFIG\\" > ~/.kube/config

                  export KUBECONFIG=~/.kube/config

                  export JOB_NAMESPACE=\\"awesome-ci\\"

                  ACTIVE_JOBS=$(kubectl get jobs -n $JOB_NAMESPACE -o json | jq
                  \\".items | .[] | select(.status.active > 0).metadata.name\\")

                  for subdir in /workflow/*; do
                    [ -d \\"$subdir\\" ] || continue
                    subdir_basename=\${subdir##*/}
                    if ! echo $ACTIVE_JOBS | grep -e \\"job-\${subdir_basename}\\"; then
                      echo \\"Cleaning '$subdir'\\"
                      rm -rf $subdir
                    fi
                  done
              volumeMounts:
                - name: workflow
                  mountPath: /workflow
          volumes:
            - name: workflow
              persistentVolumeClaim:
                claimName: jobs-shared-storage
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    kapp.k14s.io/disable-original: ''
  labels:
    component: app
    application: test-jobs-seed-sql
  name: app
  namespace: test-jobs-seed-sql-feature-branch-1
spec:
  rules:
    - host: test-jobs-seed-sql-feature-branch-1.dev.fabrique.social.gouv.fr
      http:
        paths:
          - backend:
              service:
                name: app
                port:
                  name: http
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - test-jobs-seed-sql-feature-branch-1.dev.fabrique.social.gouv.fr
      secretName: wildcard-crt
"
`;
