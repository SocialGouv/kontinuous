apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: {{ or .Values.component .Chart.Name }}
  name: {{ or .Values.component .Chart.Name }}
  {{- include "metadata.namespace" . | nindent 2 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      component: {{ or .Values.component .Chart.Name }}
  template:
    metadata:
      labels:
        component: {{ or .Values.component .Chart.Name }}
    spec:
      volumes:
        - name: artifacts
          persistentVolumeClaim:
            claimName: artifacts
      containers:
        - name: webhook
          image: {{ .Values.image }}
          imagePullPolicy: Always
          ports:
            - containerPort: {{ .Values.containerPort }}
              name: http
          volumeMounts:
            - name: artifacts
              mountPath: /artifacts
          env:
            - name: RANCHER_PROJECT_NAME
              value: "{{ required "rancherProjectName value is required" .Values.rancherProjectName }}"
            - name: KUBEWEBHOOK_EXPOSED_HOST
              value: "{{ .Values.host }}"
            - name: KUBEWEBHOOK_EXPOSED_HTTPS
              value: "true"
            - name: KUBEWEBHOOK_EXPOSED_PORT
              value: "443"
          envFrom:
            {{ range $secretRefName := .Values.secretRefNames }}
            - secretRef:
                name: "{{ $secretRefName }}"
            {{ end }}
          resources:
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
          readinessProbe:
            httpGet:
              path: /ready
              port: 9000
            failureThreshold: 1
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /live
              port: 9000
            failureThreshold: 3
            initialDelaySeconds: 10
            # Allow sufficient amount of time (90 seconds = periodSeconds * failureThreshold)
            # for the registered shutdown handlers to run to completion.
            periodSeconds: 30
            successThreshold: 1
            # Setting a very low timeout value (e.g. 1 second) can cause false-positive
            # checks and service interruption.
            timeoutSeconds: 5

          # As per Kubernetes documentation (https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#when-should-you-use-a-startup-probe),
          # startup probe should point to the same endpoint as the liveness probe.
          #
          # Startup probe is only needed when container is taking longer to start than
          # `initialDelaySeconds + failureThreshold Ã— periodSeconds` of the liveness probe.
          startupProbe:
            httpGet:
              path: /live
              port: 9000
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
