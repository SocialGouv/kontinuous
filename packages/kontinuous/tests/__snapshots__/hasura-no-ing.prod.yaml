// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`hasura-no-ing.prod 1`] = `
"apiVersion: v1
kind: Namespace
metadata:
  annotations:
    field.cattle.io/projectId: '1234'
    kontinuous/gitBranch: feature-branch-1
    kontinuous/mainNamespace: 'true'
    kapp.k14s.io/exists: ''
  labels:
    application: test-hasura-no-ing
  name: test-hasura-no-ing
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: netpol-ingress
  namespace: test-hasura-no-ing
  annotations:
    kapp.k14s.io/disable-original: ''
spec:
  ingress:
    - from:
        - podSelector: {}
    - from:
        - namespaceSelector:
            matchLabels:
              network-policy/source: ingress-controller
    - from:
        - namespaceSelector:
            matchLabels:
              network-policy/source: monitoring
  podSelector: {}
  policyTypes:
    - Ingress
---
apiVersion: v1
kind: LimitRange
metadata:
  name: default-limits
  namespace: test-hasura-no-ing
  annotations:
    kapp.k14s.io/disable-original: ''
spec:
  limits:
    - type: Container
      default:
        cpu: 500m
        memory: 512Mi
      defaultRequest:
        cpu: 100m
        memory: 128Mi
      max:
        cpu: 3
        memory: 8Gi
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: default
  namespace: test-hasura-no-ing
  annotations:
    kapp.k14s.io/disable-original: ''
automountServiceAccountToken: false
---
apiVersion: v1
kind: Service
metadata:
  labels:
    component: hasura
    application: test-hasura-no-ing
  name: hasura
  namespace: test-hasura-no-ing
  annotations:
    kapp.k14s.io/disable-default-ownership-label-rules: ''
    kapp.k14s.io/disable-default-label-scoping-rules: ''
    kapp.k14s.io/disable-original: ''
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8080
  selector:
    component: hasura
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: hasura
    application: test-hasura-no-ing
  name: hasura
  namespace: test-hasura-no-ing
  annotations:
    kapp.k14s.io/change-group: kontinuous/test-hasura-no-ing
    kapp.k14s.io/change-group.hasura: kontinuous/hasura.test-hasura-no-ing
    kapp.k14s.io/disable-original: ''
    kapp.k14s.io/create-strategy: fallback-on-update
    kapp.k14s.io/update-strategy: fallback-on-replace
    kapp.k14s.io/nonce: ''
spec:
  replicas: 1
  selector:
    matchLabels:
      component: hasura
  template:
    metadata:
      labels:
        component: hasura
        application: test-hasura-no-ing
    spec:
      containers:
        - image: harbor.fabrique.social.gouv.fr/test-hasura-no-ing/hasura:prod
          livenessProbe:
            failureThreshold: 15
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 5
          name: hasura
          ports:
            - containerPort: 8080
              name: http
          readinessProbe:
            failureThreshold: 15
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 500m
              memory: 1280Mi
            requests:
              cpu: 50m
              memory: 128Mi
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz
              port: http
            periodSeconds: 5
          env: []
          envFrom: []
"
`;
