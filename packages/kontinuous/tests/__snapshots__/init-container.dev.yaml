// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`init-container.dev 1`] = `
"apiVersion: v1
kind: Namespace
metadata:
  annotations:
    janitor/ttl: 7d
    field.cattle.io/projectId: '1234'
    kontinuous/gitBranch: feature-branch-1
    kontinuous/mainNamespace: 'true'
    kapp.k14s.io/exists: ''
  labels:
    application: test-init-container
    cert: wildcard
  name: test-init-container-feature-branch-1
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: netpol-ingress
  namespace: test-init-container-feature-branch-1
  annotations:
    kapp.k14s.io/disable-original: ''
spec:
  ingress:
    - from:
        - podSelector: {}
    - from:
        - namespaceSelector:
            matchLabels:
              network-policy/source: ingress-controller
    - from:
        - namespaceSelector:
            matchLabels:
              network-policy/source: monitoring
  podSelector: {}
  policyTypes:
    - Ingress
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: default
  namespace: test-init-container-feature-branch-1
  annotations:
    kapp.k14s.io/disable-original: ''
automountServiceAccountToken: false
---
apiVersion: v1
kind: Service
metadata:
  labels:
    component: app
    application: test-init-container
  name: app
  namespace: test-init-container-feature-branch-1
  annotations:
    kapp.k14s.io/disable-default-ownership-label-rules: ''
    kapp.k14s.io/disable-default-label-scoping-rules: ''
    kapp.k14s.io/disable-original: ''
spec:
  ports:
    - name: http
      port: 80
      targetPort: 3000
  selector:
    component: app
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: app
    application: test-init-container
  name: app
  namespace: test-init-container-feature-branch-1
  annotations:
    kapp.k14s.io/change-group: kontinuous/test-init-container-feature-branch-1
    kapp.k14s.io/change-group.app: kontinuous/app.test-init-container-feature-branch-1
    kapp.k14s.io/change-rule.seed: >-
      upsert after upserting
      kontinuous/seed.test-init-container-feature-branch-1
    kapp.k14s.io/disable-original: ''
    kapp.k14s.io/create-strategy: fallback-on-update
    kapp.k14s.io/update-strategy: fallback-on-replace
    kapp.k14s.io/nonce: ''
spec:
  replicas: 1
  selector:
    matchLabels:
      component: app
  template:
    metadata:
      labels:
        component: app
        application: test-init-container
    spec:
      containers:
        - image: >-
            harbor.fabrique.social.gouv.fr/test-init-container/app:sha-ffac537e6cbbf934b08745a378932722df287a53
          livenessProbe:
            failureThreshold: 15
            httpGet:
              path: /index.html
              port: http
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 5
          name: app
          ports:
            - containerPort: 3000
              name: http
          readinessProbe:
            failureThreshold: 15
            httpGet:
              path: /index.html
              port: http
            initialDelaySeconds: 0
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
          startupProbe:
            failureThreshold: 12
            httpGet:
              path: /index.html
              port: http
            periodSeconds: 5
---
apiVersion: batch/v1
kind: Job
metadata:
  name: job-test-init-container-feature-branch-1-seed
  namespace: awesome-ci
  annotations:
    kapp.k14s.io/nonce: ''
    kapp.k14s.io/update-strategy: fallback-on-replace
    kapp.k14s.io/change-group: kontinuous/test-init-container-feature-branch-1
    kapp.k14s.io/change-group.seed: kontinuous/seed.test-init-container-feature-branch-1
    janitor/ttl: '1800'
    kapp.k14s.io/disable-original: ''
    kapp.k14s.io/create-strategy: fallback-on-update
spec:
  backoffLimit: 2
  activeDeadlineSeconds: 3600
  ttlSecondsAfterFinished: 1800
  template:
    metadata: {}
    spec:
      restartPolicy: Never
      initContainers:
        - name: degit-repository
          image: harbor.fabrique.social.gouv.fr/sre/kontinuous/degit:v1
          command:
            - sh
            - '-c'
            - |
              degit kontinuous/test-init-container#feature-branch-1 \\\\
                /workspace
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
          volumeMounts:
            - name: workspace
              mountPath: /workspace
      containers:
        - name: job
          image: >-
            harbor.fabrique.social.gouv.fr/test-init-container/app:sha-ffac537e6cbbf934b08745a378932722df287a53
          imagePullPolicy: IfNotPresent
          command:
            - /bin/bash
            - '-c'
            - |
              set -e
              yarn seed
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
          volumeMounts:
            - name: workspace
              mountPath: /workspace
            - name: action
              mountPath: /action
      volumes:
        - name: workspace
          emptyDir: {}
        - name: action
          emptyDir: {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    kapp.k14s.io/disable-original: ''
  labels:
    component: app
    application: test-init-container
  name: app
  namespace: test-init-container-feature-branch-1
spec:
  rules:
    - host: test-init-container-feature-branch-1.dev.fabrique.social.gouv.fr
      http:
        paths:
          - backend:
              service:
                name: app
                port:
                  name: http
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - test-init-container-feature-branch-1.dev.fabrique.social.gouv.fr
      secretName: wildcard-crt
"
`;
