// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`jobs-build-stage.dev 1`] = `
"apiVersion: v1
kind: Namespace
metadata:
  annotations:
    janitor/ttl: 7d
    field.cattle.io/projectId: '1234'
    kontinuous/gitBranch: feature-branch-1
    kontinuous/mainNamespace: 'true'
    kapp.k14s.io/exists: ''
  labels:
    application: test-jobs-build-stage
    cert: wildcard
  name: test-jobs-build-stage-feature-branch-1
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: netpol-ingress
  namespace: test-jobs-build-stage-feature-branch-1
  annotations:
    kapp.k14s.io/disable-original: ''
spec:
  ingress:
    - from:
        - podSelector: {}
    - from:
        - namespaceSelector:
            matchLabels:
              network-policy/source: ingress-controller
    - from:
        - namespaceSelector:
            matchLabels:
              network-policy/source: monitoring
  podSelector: {}
  policyTypes:
    - Ingress
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: default
  namespace: test-jobs-build-stage-feature-branch-1
  annotations:
    kapp.k14s.io/disable-original: ''
automountServiceAccountToken: false
---
apiVersion: v1
kind: Service
metadata:
  labels:
    component: app
    application: test-jobs-build-stage
  name: app
  namespace: test-jobs-build-stage-feature-branch-1
  annotations:
    kapp.k14s.io/disable-default-ownership-label-rules: ''
    kapp.k14s.io/disable-default-label-scoping-rules: ''
    kapp.k14s.io/disable-original: ''
spec:
  ports:
    - name: http
      port: 80
      targetPort: 3000
  selector:
    component: app
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    component: hasura
    application: test-jobs-build-stage
  name: hasura
  namespace: test-jobs-build-stage-feature-branch-1
  annotations:
    kapp.k14s.io/disable-default-ownership-label-rules: ''
    kapp.k14s.io/disable-default-label-scoping-rules: ''
    kapp.k14s.io/disable-original: ''
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8080
  selector:
    component: hasura
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: app
    application: test-jobs-build-stage
  name: app
  namespace: test-jobs-build-stage-feature-branch-1
  annotations:
    kapp.k14s.io/change-group: kontinuous/test-jobs-build-stage-feature-branch-1
    kapp.k14s.io/change-group.app: kontinuous/app.test-jobs-build-stage-feature-branch-1
    kapp.k14s.io/change-rule.build: >-
      upsert after upserting
      kontinuous/build.test-jobs-build-stage-feature-branch-1
    kapp.k14s.io/disable-original: ''
    kapp.k14s.io/create-strategy: fallback-on-update
    kapp.k14s.io/update-strategy: fallback-on-replace
    kapp.k14s.io/nonce: ''
spec:
  replicas: 1
  selector:
    matchLabels:
      component: app
  template:
    metadata:
      labels:
        component: app
        application: test-jobs-build-stage
        namespace: test-jobs-build-stage-feature-branch-1
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: namespace
                    operator: In
                    values:
                      - test-jobs-build-stage-feature-branch-1
                  - key: component
                    operator: In
                    values:
                      - app
              topologyKey: kubernetes.io/hostname
      containers:
        - image: >-
            harbor.fabrique.social.gouv.fr/test-jobs-build-stage/app:sha-ffac537e6cbbf934b08745a378932722df287a53
          livenessProbe:
            failureThreshold: 15
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 5
          name: app
          ports:
            - containerPort: 3000
              name: http
          readinessProbe:
            failureThreshold: 15
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 0
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
          startupProbe:
            failureThreshold: 12
            httpGet:
              path: /healthz
              port: http
            periodSeconds: 5
          envFrom:
            - secretRef:
                name: pg-user-feature-branch-1
            - secretRef:
                name: app-sealed-secret
            - configMapRef:
                name: app-configmap
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: hasura
    application: test-jobs-build-stage
  name: hasura
  namespace: test-jobs-build-stage-feature-branch-1
  annotations:
    kapp.k14s.io/change-group: kontinuous/test-jobs-build-stage-feature-branch-1
    kapp.k14s.io/change-group.hasura: kontinuous/hasura.test-jobs-build-stage-feature-branch-1
    kapp.k14s.io/change-rule.build: >-
      upsert after upserting
      kontinuous/build.test-jobs-build-stage-feature-branch-1
    kapp.k14s.io/change-rule.db: >-
      upsert after upserting
      kontinuous/db.test-jobs-build-stage-feature-branch-1
    kapp.k14s.io/disable-original: ''
    kapp.k14s.io/create-strategy: fallback-on-update
    kapp.k14s.io/update-strategy: fallback-on-replace
    kapp.k14s.io/nonce: ''
spec:
  replicas: 1
  selector:
    matchLabels:
      component: hasura
  template:
    metadata:
      labels:
        component: hasura
        application: test-jobs-build-stage
    spec:
      containers:
        - image: >-
            harbor.fabrique.social.gouv.fr/test-jobs-build-stage/hasura:sha-ffac537e6cbbf934b08745a378932722df287a53
          livenessProbe:
            failureThreshold: 15
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 5
          name: hasura
          ports:
            - containerPort: 8080
              name: http
          readinessProbe:
            failureThreshold: 15
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 500m
              memory: 1280Mi
            requests:
              cpu: 50m
              memory: 128Mi
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz
              port: http
            periodSeconds: 5
          env: []
          envFrom:
            - secretRef:
                name: pg-user-feature-branch-1
            - secretRef:
                name: hasura-sealed-secret
            - configMapRef:
                name: hasura-configmap
---
apiVersion: batch/v1
kind: Job
metadata:
  name: job-test-jobs-build-stage-feature-branch-1-db-create-se-127cnw
  namespace: awesome-ci
  annotations:
    kapp.k14s.io/nonce: ''
    kapp.k14s.io/update-strategy: fallback-on-replace
    kapp.k14s.io/change-group: kontinuous/test-jobs-build-stage-feature-branch-1
    kapp.k14s.io/change-group.db: kontinuous/db.test-jobs-build-stage-feature-branch-1
    kapp.k14s.io/change-group.db.create-secret: kontinuous/db.create-secret.test-jobs-build-stage-feature-branch-1
    kapp.k14s.io/change-group.db..create-secret: kontinuous/db..create-secret.test-jobs-build-stage-feature-branch-1
    janitor/ttl: '1800'
    kapp.k14s.io/disable-original: ''
    kapp.k14s.io/create-strategy: fallback-on-update
spec:
  backoffLimit: 2
  activeDeadlineSeconds: 3600
  ttlSecondsAfterFinished: 1800
  template:
    metadata: {}
    spec:
      restartPolicy: Never
      initContainers:
        - name: degit-action
          image: harbor.fabrique.social.gouv.fr/sre/kontinuous/degit:v1
          command:
            - sh
            - '-c'
            - >-
              degit SocialGouv/kontinuous/plugins/fabrique/jobs/create-db
              /action
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1001
          volumeMounts:
            - name: action
              mountPath: /action
      containers:
        - name: job
          image: bitnami/kubectl:latest
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: pg-scaleway
            - secretRef:
                name: kubeconfig
          env:
            - name: DB_SECRET_NAME
              value: pg-user-feature-branch-1
            - name: JOB_NAMESPACE
              value: awesome-ci
            - name: NAMESPACE
              value: test-jobs-build-stage-feature-branch-1
            - name: PGDATABASE
              value: autodevops_feature-branch-1
            - name: PGUSER
              value: user_feature-branch-1
          command:
            - /bin/bash
            - '-c'
            - |
              set -e
              /action/create-secret.sh
          securityContext:
            runAsUser: 1001
            runAsGroup: 1001
            fsGroup: 1001
          volumeMounts:
            - name: workspace
              mountPath: /workspace
            - name: action
              mountPath: /action
      volumes:
        - name: workspace
          emptyDir: {}
        - name: action
          emptyDir: {}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: job-test-jobs-build-stage-feature-branch-1-db-create-db-13oc8a
  namespace: awesome-ci
  annotations:
    kapp.k14s.io/nonce: ''
    kapp.k14s.io/update-strategy: fallback-on-replace
    kapp.k14s.io/change-group: kontinuous/test-jobs-build-stage-feature-branch-1
    kapp.k14s.io/change-group.db: kontinuous/db.test-jobs-build-stage-feature-branch-1
    kapp.k14s.io/change-group.db.create-db: kontinuous/db.create-db.test-jobs-build-stage-feature-branch-1
    kapp.k14s.io/change-group.db..create-db: kontinuous/db..create-db.test-jobs-build-stage-feature-branch-1
    kapp.k14s.io/change-rule.db..create-secret: >-
      upsert after upserting
      kontinuous/db..create-secret.test-jobs-build-stage-feature-branch-1
    janitor/ttl: '1800'
    kapp.k14s.io/disable-original: ''
    kapp.k14s.io/create-strategy: fallback-on-update
spec:
  backoffLimit: 2
  activeDeadlineSeconds: 3600
  ttlSecondsAfterFinished: 1800
  template:
    metadata: {}
    spec:
      restartPolicy: Never
      initContainers:
        - name: degit-action
          image: harbor.fabrique.social.gouv.fr/sre/kontinuous/degit:v1
          command:
            - sh
            - '-c'
            - >-
              degit SocialGouv/kontinuous/plugins/fabrique/jobs/create-db
              /action
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
          volumeMounts:
            - name: action
              mountPath: /action
      containers:
        - name: job
          image: ghcr.io/socialgouv/docker/psql:6.70.0
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: pg-scaleway
          env:
            - name: NEW_DB_NAME
              value: autodevops_feature-branch-1
            - name: NEW_USER
              valueFrom:
                secretKeyRef:
                  key: PGUSER
                  name: pg-user-feature-branch-1
            - name: NEW_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: PGPASSWORD
                  name: pg-user-feature-branch-1
            - name: PGHOST
              valueFrom:
                secretKeyRef:
                  key: PGHOST
                  name: pg-user-feature-branch-1
            - name: PGPORT
              valueFrom:
                secretKeyRef:
                  key: PGPORT
                  name: pg-user-feature-branch-1
            - name: NEW_DB_EXTENSIONS
              value: hstore pgcrypto citext uuid-ossp postgis pg_trgm unaccent
          command:
            - /bin/bash
            - '-c'
            - |
              set -e
              /action/ensure-db.sh
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
          volumeMounts:
            - name: workspace
              mountPath: /workspace
            - name: action
              mountPath: /action
      volumes:
        - name: workspace
          emptyDir: {}
        - name: action
          emptyDir: {}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: job-test-jobs-build-stage-feature-branch-1-build-app-ka-4fyeqd
  namespace: awesome-ci
  annotations:
    kapp.k14s.io/nonce: ''
    kapp.k14s.io/update-strategy: fallback-on-replace
    kapp.k14s.io/change-group: kontinuous/test-jobs-build-stage-feature-branch-1
    kapp.k14s.io/change-group.kontinuous-stage: kontinuous/build.test-jobs-build-stage-feature-branch-1
    kapp.k14s.io/change-group.build-app: kontinuous/build-app.test-jobs-build-stage-feature-branch-1
    kapp.k14s.io/change-group.build-app.kaniko: kontinuous/build-app.kaniko.test-jobs-build-stage-feature-branch-1
    kapp.k14s.io/change-group.build-app..kaniko: kontinuous/build-app..kaniko.test-jobs-build-stage-feature-branch-1
    janitor/ttl: '1800'
    kapp.k14s.io/disable-original: ''
    kapp.k14s.io/create-strategy: fallback-on-update
spec:
  backoffLimit: 2
  activeDeadlineSeconds: 3600
  ttlSecondsAfterFinished: 1800
  template:
    metadata: {}
    spec:
      restartPolicy: Never
      initContainers:
        - name: degit-repository
          image: harbor.fabrique.social.gouv.fr/sre/kontinuous/degit:v1
          command:
            - sh
            - '-c'
            - |
              degit kontinuous/test-jobs-build-stage#feature-branch-1 \\\\
                /workspace
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
          volumeMounts:
            - name: workspace
              mountPath: /workspace
      containers:
        - name: job
          image: gcr.io/kaniko-project/executor:debug
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: harbor
          command:
            - /busybox/sh
            - '-c'
            - >
              set -e

              mkdir -p /kaniko/.docker

              echo
              \\"{\\\\\\"auths\\\\\\":{\\\\\\"$CI_REGISTRY\\\\\\":{\\\\\\"username\\\\\\":\\\\\\"$CI_REGISTRY_USER\\\\\\",\\\\\\"password\\\\\\":\\\\\\"$CI_REGISTRY_PASSWORD\\\\\\"}}}\\"
              > /kaniko/.docker/config.json

              export
              DOCKER_IMAGE=$CI_REGISTRY/test-jobs-build-stage/app:sha-ffac537e6cbbf934b08745a378932722df287a53

              /kaniko/executor \\\\
                --context=dir:///workspace \\\\
                --dockerfile=/workspace/Dockerfile \\\\
                --destination=$DOCKER_IMAGE \\\\
                --cache=true \\\\
                --snapshotMode=time \\\\
                --use-new-run \\\\
                
          securityContext:
            runAsUser: 0
            runAsGroup: 0
            fsGroup: 0
          volumeMounts:
            - name: workspace
              mountPath: /workspace
            - name: action
              mountPath: /action
      volumes:
        - name: workspace
          emptyDir: {}
        - name: action
          emptyDir: {}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: job-test-jobs-build-stage-feature-branch-1-build-hasura-1zhkhr
  namespace: awesome-ci
  annotations:
    kapp.k14s.io/nonce: ''
    kapp.k14s.io/update-strategy: fallback-on-replace
    kapp.k14s.io/change-group: kontinuous/test-jobs-build-stage-feature-branch-1
    kapp.k14s.io/change-group.kontinuous-stage: kontinuous/build.test-jobs-build-stage-feature-branch-1
    kapp.k14s.io/change-group.build-hasura: kontinuous/build-hasura.test-jobs-build-stage-feature-branch-1
    kapp.k14s.io/change-group.build-hasura.kaniko: kontinuous/build-hasura.kaniko.test-jobs-build-stage-feature-branch-1
    kapp.k14s.io/change-group.build-hasura..kaniko: kontinuous/build-hasura..kaniko.test-jobs-build-stage-feature-branch-1
    janitor/ttl: '1800'
    kapp.k14s.io/disable-original: ''
    kapp.k14s.io/create-strategy: fallback-on-update
spec:
  backoffLimit: 2
  activeDeadlineSeconds: 3600
  ttlSecondsAfterFinished: 1800
  template:
    metadata: {}
    spec:
      restartPolicy: Never
      initContainers:
        - name: degit-repository
          image: harbor.fabrique.social.gouv.fr/sre/kontinuous/degit:v1
          command:
            - sh
            - '-c'
            - |
              degit kontinuous/test-jobs-build-stage#feature-branch-1 \\\\
                /workspace
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
          volumeMounts:
            - name: workspace
              mountPath: /workspace
      containers:
        - name: job
          image: gcr.io/kaniko-project/executor:debug
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: harbor
          command:
            - /busybox/sh
            - '-c'
            - >
              set -e

              mkdir -p /kaniko/.docker

              echo
              \\"{\\\\\\"auths\\\\\\":{\\\\\\"$CI_REGISTRY\\\\\\":{\\\\\\"username\\\\\\":\\\\\\"$CI_REGISTRY_USER\\\\\\",\\\\\\"password\\\\\\":\\\\\\"$CI_REGISTRY_PASSWORD\\\\\\"}}}\\"
              > /kaniko/.docker/config.json

              export
              DOCKER_IMAGE=$CI_REGISTRY/test-jobs-build-stage/hasura:sha-ffac537e6cbbf934b08745a378932722df287a53

              /kaniko/executor \\\\
                --context=dir:///workspace/hasura \\\\
                --dockerfile=/workspace/hasura/Dockerfile \\\\
                --destination=$DOCKER_IMAGE \\\\
                --cache=true \\\\
                --snapshotMode=time \\\\
                --use-new-run \\\\
                
          securityContext:
            runAsUser: 0
            runAsGroup: 0
            fsGroup: 0
          volumeMounts:
            - name: workspace
              mountPath: /workspace
            - name: action
              mountPath: /action
      volumes:
        - name: workspace
          emptyDir: {}
        - name: action
          emptyDir: {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    kapp.k14s.io/disable-original: ''
  labels:
    component: app
    application: test-jobs-build-stage
  name: app
  namespace: test-jobs-build-stage-feature-branch-1
spec:
  rules:
    - host: test-jobs-build-stage-feature-branch-1.dev.fabrique.social.gouv.fr
      http:
        paths:
          - backend:
              service:
                name: app
                port:
                  name: http
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - test-jobs-build-stage-feature-branch-1.dev.fabrique.social.gouv.fr
      secretName: wildcard-crt
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    kapp.k14s.io/disable-original: ''
  labels:
    component: hasura
    application: test-jobs-build-stage
  name: hasura
  namespace: test-jobs-build-stage-feature-branch-1
spec:
  rules:
    - host: >-
        hasura-test-jobs-build-stage-feature-branch-1.dev.fabrique.social.gouv.fr
      http:
        paths:
          - backend:
              service:
                name: hasura
                port:
                  name: http
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - >-
          hasura-test-jobs-build-stage-feature-branch-1.dev.fabrique.social.gouv.fr
      secretName: wildcard-crt
"
`;
