runs:
  - name: kaniko
    checkout: true
    action: false
    image: gcr.io/kaniko-project/executor:debug
    # serviceAccountName: kaniko
    user: 0
    entrypoint: ["/busybox/sh","-c"]
    envFrom:
      - secretRef:
          name: "{{ $.with.registrySecretRefName }}"
    outputs:
      - DOCKER_IMAGE
    run: |
      mkdir -p /kaniko/.docker
      echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
      export DOCKER_IMAGE=$CI_REGISTRY{{ if (or $.with.imageProject $.Values.global.imageProject) }}{{ (print "/" (or $.with.imageProject $.Values.global.imageProject)) }}{{ end }}/{{ or $.with.imageRepository $.Values.global.imageRepository }}{{ if $.with.imagePackage }}{{ (print "/" $.with.imagePackage) }}{{ end }}{{ if $.with.target }}{{ (print "-" $.with.target) }}{{ end }}:{{ or $.with.imageTag $.Values.global.imageTag }}
      /kaniko/executor \
        --context=dir:///workspace{{ if $.with.context }}/{{ $.with.context }}{{ end }} \
        --dockerfile=/workspace{{ if $.with.context }}/{{ $.with.context }}{{ end }}/{{ or $.with.dockerfile "Dockerfile" }} \
        {{ if $.with.noPush -}}
        --no-push \
        {{ else -}}
        --destination=$DOCKER_IMAGE \
        --cache=true \
        {{ end -}}
        --snapshotMode=time \
        --use-new-run \
        {{ if $.with.buildArgs -}}
        {{- range $key, $val := $.with.buildArgs -}}
        --build-arg="{{ tpl $key $ }}={{ tpl $val $ }}" \
        {{ end -}}
        {{ end -}}
        {{ if $.with.target -}}
        --target="{{ $.with.target }}" \
        {{ end -}}