apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: {{ or .Values.component .Chart.Name }}
    application: {{ .Values.global.repositoryName }}
  name: {{ or .Values.component .Chart.Name }}
  namespace: {{ or .Values.namespace .Values.global.namespace }}
  annotations:
    {{- include "kontinuous-helpers.annotations.kapp-deployment" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      component: {{ or .Values.component .Chart.Name }}
  template:
    metadata:
      labels:
        component: {{ or .Values.component .Chart.Name }}
        application: {{ .Values.application }}
    spec:
      containers:
        - image: redis:6.2.5-alpine3.14
          name: redis
          env:
            {{- if gt (len .Values.env) 0 }}
            {{- tpl (.Values.env | toYaml) . | nindent 12 }}
            {{- end }}
          envFrom:
            {{- if gt (len .Values.envFrom) 0 }}
            {{- tpl (.Values.envFrom | toYaml) . | nindent 12 }}
            {{- end }}
          ports:
            - containerPort: 6379
              name: http
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 5
            exec:
              command:
                - sh
                - '-c'
                - redis-cli ping
          readinessProbe:
            failureThreshold: 15
            initialDelaySeconds: 0
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
            exec:
              command:
                - sh
                - '-c'
                - redis-cli ping
          startupProbe:
            failureThreshold: 12
            periodSeconds: 5
            exec:
              command:
                - sh
                - '-c'
                - redis-cli ping
          resources:
            limits:
              cpu: 1000m
              memory: 1Gi
            requests:
              cpu: 300m
              memory: 128Mi