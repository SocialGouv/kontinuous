runs:
  - name: buildkit
    checkout: true
    action: false
    # image: moby/buildkit:v0.8.1-rootless
    image: moby/buildkit:master-rootless
    # serviceAccountName: buildkit
    cpuLimit: "2"
    cpuRequest: 500m
    memoryLimit: 4Gi
    memoryRequest: 1Gi
    entrypoint: ["/busybox/sh","-c"]
    user: 1000
    group: 1000
    annotations:
      container.apparmor.security.beta.kubernetes.io/buildkit: unconfined
      container.seccomp.security.alpha.kubernetes.io/buildkit: unconfined
    envFrom:
      - secretRef:
          name: "{{ or $.with.registrySecretRefName $.Values.global.registrySecretRefName }}"
    env:
      - name: BUILDKITD_FLAGS
        value: --oci-worker-no-process-sandbox
    run: |
      echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /home/user/.docker/config.json
      export IMAGE_PATH=$CI_REGISTRY{{ if (or $.with.imageProject $.Values.global.imageProject) }}{{ (print "/" (or $.with.imageProject $.Values.global.imageProject)) }}{{ end }}/{{ or $.with.imageRepository $.Values.global.imageRepository }}{{ if $.with.imagePackage }}{{ (print "/" $.with.imagePackage) }}{{ end }}{{ if $.with.target }}{{ (print "-" $.with.target) }}{{ end }}
      buildctl-daemonless.sh \
        build \
        --frontend dockerfile.v0 \
        --local context=/workspace/{{ if $.with.context }}/{{ $.with.context }}{{ end }} \
        --local dockerfile=/workspace{{ if $.with.context }}/{{ $.with.context }}{{ end }}/{{ or $.with.dockerfile "Dockerfile" }} \
        --output type=image,"name=$IMAGE_PATH,$IMAGE_PATH:{{ or $.with.imageTag $.Values.global.imageTag }},$IMAGE_PATH:{{ $.Values.global.branchSlug32 }}",push=true \
        --export-cache mode=max,type=registry,ref=$CI_REGISTRY/$IMAGE_PATH:cache \
        --import-cache type=registry,ref=$CI_REGISTRY/$IMAGE_PATH:cache \
        {{ if $.with.buildArgs -}}
        {{- range $key, $val := $.with.buildArgs -}}
        --opt build-arg="{{ tpl $key $ }}={{ tpl $val $ }}" \
        {{ end -}}
        {{ end -}}
        {{ if $.with.target -}}
        --target="{{ $.with.target }}" \
        {{ end -}}  