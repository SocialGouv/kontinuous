{{- $registry := or .Values.registry .Values.global.registry -}}
{{- $imageProject := or .Values.imageProject .Values.global.imageProject -}}
{{- $imageRepository := or .Values.imageRepository .Values.global.imageRepository -}}
{{- $imagePackage := .Values.imagePackage -}}
{{- $imageTag := or .Values.imageTag .Values.global.imageTag -}}


{{ $imagePath := "" }}
{{- if .Values.image }}
{{- $imagePath = .Values.image }}
{{ else }}
{{- $imagePathList := list -}}
{{- if $registry }}{{- $imagePathList = append $imagePathList $registry -}}{{- end -}}
{{- if $imageProject }}{{- $imagePathList = append $imagePathList (print $imageProject) -}}{{- end -}}
{{- if $imageRepository }}{{- $imagePathList = append $imagePathList (print $imageRepository) -}}{{- end -}}
{{- if $imagePackage }}{{- $imagePathList = append $imagePathList (print $imagePackage) -}}{{- end -}}
{{- $fullImagePath := join "/" $imagePathList -}}
{{- $imagePath = printf "%s:%s" $fullImagePath $imageTag -}}
{{ end }}

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: {{ (or .Values.component .Chart.Name) | lower }}
    application: {{ .Values.global.repositoryName }}
    {{- if .Values.labels }}
    {{- range $key, $val := .Values.labels }}
    "{{ $key }}": "{{ $val }}"
    {{- end }}
    {{- end }}
  name: {{ (or .Values.component .Chart.Name) | lower }}
  namespace: {{ or .Values.namespace .Values.global.namespace }}
  annotations:
  {{- if .Values.annotations }}
  {{- range $key, $val := .Values.annotations }}
    "{{ $key }}": "{{ $val }}"
  {{- end }}
  {{- end }}
spec:
  replicas: {{ or .Values.replicas .Values.global.replicas 1 }}
  selector:
    matchLabels:
      component: {{ (or .Values.component .Chart.Name) | lower }}
  strategy:
    type: {{ .Values.strategyType }}
  template:
    metadata:
      labels:
        component: {{ (or .Values.component .Chart.Name) | lower }}
        application: {{ .Values.global.repositoryName }}
        namespace: {{ or .Values.namespace .Values.global.namespace }}
    spec:
      {{- if .Values.securityContext }}
      securityContext:
        {{- tpl (.Values.securityContext | toYaml) . | nindent 8 }}
      {{- end }}
      affinity:
        {{- include "contrib-helpers.anti-affinity" . | nindent 8}}
        {{- if .Values.affinity }}
        {{- tpl (.Values.affinity | toYaml) . | nindent 8}}
        {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
        {{- tpl (.Values.tolerations | toYaml) . | nindent 8}}
      {{- end }}
      initContainers:
      {{- if .Values.waitForPostgres }}
        {{- include "contrib-helpers.init-containers.wait-for-postgres" . | nindent 8 }}
      {{- end }}
      {{- if .Values.initContainers }}
        {{- tpl (.Values.initContainers | toYaml) . | nindent 8 }}
      {{- end }}
      volumes:
        {{- if gt (len .Values.volumes) 0 }}
        {{- tpl (.Values.volumes | toYaml) . | nindent 8 }}
        {{- end }}
        {{- range $volumeName := .Values.addVolumes }}
        - name: "{{ tpl $volumeName $ }}"
          persistentVolumeClaim:
            claimName: "{{ tpl $volumeName $ }}"
        {{- end }}
      containers:
        - image: "{{ $imagePath }}"
          {{- if .Values.containerSecurityContext }}
          securityContext:
            {{- tpl (.Values.containerSecurityContext | toYaml) . | nindent 12 }}
          {{- end }}
          {{- if .Values.entrypoint }}
          command:
            {{- tpl (.Values.entrypoint | toYaml) $ | nindent 12 }}
          {{- end }}
          {{- if .Values.args }}
          args:
          {{- range $arg := .Values.args }}
            - "{{ tpl $arg $ }}"
          {{- end }}
          {{- end }}
          name: app
          ports:
            - containerPort: {{ .Values.containerPort }}
              name: http
          livenessProbe:
            {{- include "contrib-helpers.livenessProbe" . | nindent 12 }}
          readinessProbe:
            {{- include "contrib-helpers.readinessProbe" . | nindent 12 }}
          startupProbe:
            {{- include "contrib-helpers.startupProbe" . | nindent 12 }}
          {{ if .Values.lifecycle }}
          lifecycle:
            {{- tpl (.Values.lifecycle | toYaml) . | nindent 12 }}
          {{ end }}
          resources:
            limits:
              cpu: {{ .Values.resources.limits.cpu | quote }}
              memory: {{ .Values.resources.limits.memory | quote }}
            requests:
              cpu: {{ .Values.resources.requests.cpu | quote }}
              memory: {{ .Values.resources.requests.memory | quote }}
          env:
            {{- if gt (len .Values.env) 0 }}
            {{- tpl (.Values.env | toYaml) . | nindent 12 }}
            {{- end }}
            {{- range $name, $value := .Values.vars }}
            - name: "{{ $name }}"
              value: |-
                {{- tpl $value $ | nindent 16 }}
            {{- end }}
          envFrom:
            {{- if gt (len .Values.envFrom) 0 }}
            {{- tpl (.Values.envFrom | toYaml) . | nindent 12 }}
            {{- end }}
          volumeMounts:
            {{- if gt (len .Values.volumeMounts) 0 }}
            {{- tpl (.Values.volumeMounts | toYaml) . | nindent 12 }}
            {{- end }}
            {{- range $volumeName := .Values.addVolumes }}
            - name: "{{ tpl $volumeName $ }}"
              mountPath: "/mnt/{{ tpl $volumeName $ }}"
            {{- end }}
        {{- range $sidecar := .Values.sidecars }}
        - name: {{ $sidecar.name }}
          image: {{ or $sidecar.image $imagePath }}
          {{ if $sidecar.command }}
          command: {{ $sidecar.command | toYaml | nindent 12 }}
          {{- end }}
          {{- with $sidecar.extraSpec }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
        {{- end }}
