{{ if .Values.ingress.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    {{ if .Values.ingress.rewriteTarget }}
    nginx.ingress.kubernetes.io/rewrite-target: {{ .Values.ingress.rewriteTarget | quote }}
    {{ end }}
    {{ if .Values.ingress.customHeaders }}
    nginx.ingress.kubernetes.io/custom-headers: "{{ .Values.global.namespace }}/{{ (or .Values.component .Chart.Name) | lower }}-ingress-custom-headers"
    {{ end }}
    {{ range $key, $val := (merge dict .Values.global.ingress.annotations .Values.ingress.annotations) }}
    "{{ $key }}": {{ $val | quote }}
    {{ end }}
  labels:
    component: {{ (or .Values.component .Chart.Name) | lower }}
    application: {{ .Values.global.repositoryName }}
  name: {{ (or .Values.component .Chart.Name) | lower }}
  namespace: {{ or .Values.namespace .Values.global.namespace }}
spec:
  ingressClassName: nginx
  rules:
    - host: >-
        {{- include "contrib-helpers.ingress-host" . | nindent 8 }}
      http:
        paths:
          {{ range $val := (or .Values.ingress.paths (list .Values.ingress.path)) }}
          - backend:
              service:
                name: {{ (or $.Values.component $.Chart.Name) | lower }}
                port:
                  name: http
            path: {{ $val | quote }}
            pathType: {{ $.Values.ingress.pathType }}
          {{ end }}

  tls:
    - hosts:
        - >-
          {{- include "contrib-helpers.ingress-host" . | nindent 10 }}
      {{ include "contrib-helpers.ingress-secret" . | nindent 6 }}
{{ end }}
