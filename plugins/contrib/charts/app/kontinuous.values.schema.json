{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://raw.githubusercontent.com/socialgouv/kontinuous/v1/plugins/contrib/charts/app/kontinuous.values.schema.json",
  "title": "Kontinuous app helm chart",
  "markdownDescription": "The [app chart](https://github.com/SocialGouv/kontinuous/blob/master/plugins/contrib/charts/app) provides all the resources to deploy a kubernetes application\n\nðŸ’¡ You can use the [meta `~tpl~` prefix](https://socialgouv.github.io/kontinuous/#/./advanced/build?id=meta-values-plugin-tpl) to make any property a [go template](https://docs.gofiber.io/template/html/TEMPLATES_CHEATSHEET/#template-variables)",
  "type": "object",
  "additionalProperties": false,
  "patternProperties": {
    "^\\.": { "type": ["string", "number", "boolean"] }
  },
  "properties": {
    "~chart": {},
    "~forceRestart": {
      "description": "Force restart on every deployment. default true",
      "type": "boolean",
      "default": true
    },
    "~needs": {},
    "image": {
      "description": "Full path to docker image",
      "examples": ["ghcr.io/socialgouv/docker/nginx:7.0.1"],
      "type": "string"
    },
    "imagePackage": {
      "description": "Name of the package on the registry",
      "type": "string"
    },
    "imageProject": {
      "description": "Project name in the docker registry, default to projectName on local registry as harbor, default to organization name on ghcr.io",
      "type": "string"
    },
    "imageRepository": {
      "description": "Repository for the docker image, default to git repository name",
      "type": "string"
    },
    "probesPath": {
      "description": "Path to application health probe. Defaults to /healthz",
      "type": "string",
      "examples": ["/healthz"]
    },
    "probesPort": {
      "description": "Port for probes calls",
      "type": ["string", "number"]
    },
    "containerPort": {
      "description": "Container port, defaults to 3000",
      "type": ["string", "number"]
    },
    "host": {
      "description": "Hostname for the deployment",
      "type": "string"
    },
    "ingress": {
      "type": "object",
      "description": "Ingress configuration",
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "description": "Ingress enable. default to true",
          "type": "boolean"
        },
        "path": {
          "description": "URL path to map the ingress to",
          "type": "string",
          "examples": ["/"]
        },
        "paths": {
          "description": "List of URL paths to map the ingress to",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "rewriteTarget": {
          "description": "Redirect path on the service",
          "type": "string",
          "examples": ["/$1"]
        },
        "annotations": {
          "description": "NGINX ingress annotations, see https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/",
          "$ref": "https://raw.githubusercontent.com/socialgouv/json-schemas/main/nginx/annotations.schema.json"
        }
      }
    },
    "certSecretName": {
      "description": "Name of existing SSL cert secret if any.",
      "type": "string"
    },
    "addVolumes": {
      "description": "List of PVC claimNames to add to the deployment",
      "type": "array",
      "items": {
        "type": "string"
      },
      "examples": ["[uploads]"]
    },
    "redirectFrom": {
      "description": "List of hostnames to redirect from",
      "type": "array",
      "items": {
        "type": "string"
      },
      "examples": ["previous.url.com"]
    },
    "autoscale": {
      "description": "Horizontal pod autoscaling configuration",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Enable Horizontal pod autoscaling",
          "type": "boolean",
          "default": false
        },
        "minReplicas": {
          "description": "Minimum number of replicas",
          "type": "number",
          "default": 2
        },
        "maxReplicas": {
          "description": "Minimum number of replicas",
          "type": "number",
          "default": 10
        },
        "averageUtilization": {
          "description": "Autoscaling averageUtilization tuning",
          "type": "object",
          "properties": {
            "cpu": {
              "type": "number",
              "default": 70
            },
            "memory": {
              "type": "number",
              "default": 70
            }
          }
        }
      }
    },

    "strategyType": {
      "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.24.0/_definitions.json#/definitions/io.k8s.api.apps.v1.DeploymentStrategy/properties/type"
    },
    "env": {
      "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.24.0/_definitions.json#/definitions/io.k8s.api.core.v1.Container/properties/env"
    },
    "envFrom": {
      "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.24.0/_definitions.json#/definitions/io.k8s.api.core.v1.Container/properties/envFrom"
    },
    "vars": { "type": "object", "additionalProperties": true },
    "volumes": {
      "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.24.0/_definitions.json#/definitions/io.k8s.api.core.v1.PodSpec/properties/volumes"
    },
    "volumeMounts": {
      "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.24.0/_definitions.json#/definitions/io.k8s.api.core.v1.Container/properties/volumeMounts"
    },
    "replicas": {
      "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.24.0/_definitions.json#/definitions/io.k8s.api.apps.v1.DeploymentSpec/properties/replicas"
    },
    "resources": {
      "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.24.0/_definitions.json#/definitions/io.k8s.api.core.v1.ResourceRequirements"
    },
    "livenessProbe": {
      "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.24.0/_definitions.json#/definitions/io.k8s.api.core.v1.Probe",
      "description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
    },
    "readinessProbe": {
      "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.24.0/_definitions.json#/definitions/io.k8s.api.core.v1.Probe",
      "description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
    },
    "startupProbe": {
      "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.24.0/_definitions.json#/definitions/io.k8s.api.core.v1.Probe",
      "description": "StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
    },
    "securityContext": {
      "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.24.0/_definitions.json#/definitions/io.k8s.api.core.v1.PodSecurityContext",
      "description": "Setup your securityContext to reduce security risks, see https://kubernetes.io/docs/tasks/configure-pod-container/security-context/"
    }
  }
}
