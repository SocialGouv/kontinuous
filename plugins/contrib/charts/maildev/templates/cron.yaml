{{- if and (or (kindIs "invalid" .Values.cron.enabled) .Values.cron.enabled) (or (and (kindIs "invalid" .Values.persistence.enabled) (eq .Values.global.env "preprod")) .Values.persistence.enabled) }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ (or .Values.component .Chart.Name) | lower }}
  labels:
    component: {{ (or .Values.component .Chart.Name) | lower }}
    application: {{ .Values.global.repositoryName }}
  namespace: {{ or .Values.namespace .Values.global.namespace }}
spec:
  schedule: {{ .Values.cron.schedule | quote }}
  startingDeadlineSeconds: 100
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: delete-mail
              image: "{{ .Values.cron.image.repository }}:{{ .Values.cron.image.tag }}"
              imagePullPolicy: {{ .Values.cron.image.pullPolicy }}
              args:
                - "find"
                - "{{ .Values.persistence.mountPath }}"
                - "-type"
                - "f"
                - "-mtime"
                - "+{{ .Values.cron.daysToKeep }}"
                - "-exec"
                - "rm"
                - "-f"
                - "{}"
                - ";"
              volumeMounts:
                - name: data
                  mountPath: {{ .Values.persistence.mountPath }}
            - name: reload-mail
              image: "{{ .Values.cron.image.repository }}:{{ .Values.cron.image.tag }}"
              imagePullPolicy: {{ .Values.cron.image.pullPolicy }}
              args: ["wget","{{ (or .Values.component .Chart.Name) | lower }}:1080/reloadMailsFromDirectory"]
          volumes:
            - name: data
              persistentVolumeClaim:
                claimName: {{ .Values.persistence.existingClaim | default ((or .Values.component .Chart.Name) | lower) }}
          restartPolicy: OnFailure
  {{- end }}
